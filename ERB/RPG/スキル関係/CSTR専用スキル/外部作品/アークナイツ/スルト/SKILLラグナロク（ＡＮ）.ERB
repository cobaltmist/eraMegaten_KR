;スキル名
@SKILL_NAME_ラグナロク（ＡＮ）,ARG
RESULTS = 라그나로크（ＡＮ）

;　명중
@SKILL_HITRATE_ラグナロク（ＡＮ）, ARG
RETURN 100

;　위력
@SKILL_POWER_ラグナロク（ＡＮ）, ARG
RETURN 100

;;クリティカル率
;@SKILL_CRITICAL_RATE_ラグナロク（ＡＮ）, ARG
;RETURN 5

;;　吸収率
;@SKILL_HP_ABSORBER_ラグナロク（ＡＮ）, ARG
;RETURN 0

;　최저공격횟수
@SKILL_MINATTACKNUMBER_ラグナロク（ＡＮ）,ARG
RETURN 1

;　최대공격횟수
@SKILL_MAXATTACKNUMBER_ラグナロク（ＡＮ）,ARG
RETURN 1

;;一体辺りの最大ＨＩＴ数
;;※ランダム攻撃系に使う
;@SKILL_MAXATK_PER_ラグナロク（ＡＮ）,ARG
;RETURN 1

;;一体辺りの最低ＨＩＴ数
;;※ランダム攻撃系に使う
;@SKILL_MINATK_PER_ラグナロク（ＡＮ）,ARG
;RETURN 1

;　2 ＨＰ지불　3 ＭＰ지불
@SKILL_COSTTYPE_ラグナロク（ＡＮ）, ARG
RETURN 3
;소비없음＝1

;　코스트량
@SKILL_COST_ラグナロク（ＡＮ）,ARG
RETURN 0

;　상성
@SKILL_TYPE_ラグナロク（ＡＮ）,ARG
RETURN 0

;　1 EXTRA　2 MAGIC
@SKILL_DECIDE_TYPE_ラグナロク（ＡＮ）,ARG
RETURN 0

;　1 물리데미지로 계산　2 마법데미지로 계산
@SKILL_DAMAGETYPE_ラグナロク（ＡＮ）,ARG
RETURN 2


;　대상　1 적　2 아군　3 양쪽전체　4 특수
@SKILL_TARGET_ラグナロク（ＡＮ）,ARG
RETURN 1

;　사거리
@SKILL_RANGE_ラグナロク（ＡＮ）,ARG
RETURN 3

;　범위　1 1체　2 1열　3 전체　4 적아군전체
@SKILL_SPHERE_ラグナロク（ＡＮ）,ARG
RETURN 1

;　 효과타입　1 공격、2 회복、3 상태변화、4 특수、5 상태회복
@SKILL_EFECT_ラグナロク（ＡＮ）,ARG
RETURN 1

;　 특수처리 여부 및 처리내용
;@SKILL_SPECIALEFECT_ラグナロク（ＡＮ）,ARG
;ARG = 1인 경우는 처리 여부를 반환합니다
;SIF ARG == 1
;	RETURN 0
;아래쪽에 특수처리를 기술합니다

;계승타입
;@SKILL_SUCCESSION_TYPE_ラグナロク（ＡＮ）,ARG
;RETURN 23
;剣撃

;속도보정
@SKILL_SPEED_ラグナロク（ＡＮ）, ARG = -1
RETURN 0

;;　구상의 표시와 그 타입
;@SKILL_MESSAGE_ラグナロク（ＡＮ）,ARG


;전투시 이외에 사용 가능한가
@SKILL_ACTIONABLE_FIELD_ラグナロク（ＡＮ）, ARG = -1
RETURN 0

;没
;@SKILL_RANK_ラグナロク（ＡＮ）
;@SKILL_RANKUP_ラグナロク（ＡＮ）
;@계승불능_ラグナロク（ＡＮ）

;템플릿용、추가효과 시리즈
;추가효과 스테이터스
@SKILL_ADDTIONAL_STATE_ラグナロク（ＡＮ）,ARG
RETURN 0

;추가효과 상성
@SKILL_ADDTIONAL_TYPE_ラグナロク（ＡＮ）,ARG
RETURN 0

;추가효과 기본부여확률
@SKILL_ADDTIONAL_BASE_RATE_ラグナロク（ＡＮ）,ARG
RETURN 0

;추가효과 부여확률상한
@SKILL_ADDTIONAL_MAX_RATE_ラグナロク（ＡＮ）,ARG
RETURN 0

;;拡散攻撃用追加処理
;;ブレスなどの拡散攻撃に使う
;@SKILL_SPREAD_ラグナロク（ＡＮ）,ARG
;RETURN 0

;====================================================
;トリガー発動条件
;====================================================
@SKILL_TRIGGER_ACTIONABLE_ラグナロク（ＡＮ）,ARG,ARG:1
#DIM SKILL_NUM
#DIM ALIVE_FLAG
#DIM LCOUNT,3
SIF ARG != ARG:1 || CFLAG:ARG:입력행동 == -1
	RETURN 0
SKILL_NUM = PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）")
IF (AUTO_PU_SKILL_ラグナロク（ＡＮ）(ARG,"気合フラグ確保") + AUTO_PU_SKILL_ラグナロク（ＡＮ）(ARG,"集中フラグ確保")) > 0
	CALLFORM SKILL_EFECT_{CFLAG:ARG:입력행동}
	IF RESULT == 1 && SKILLGAGE_F_GET(ARG,SKILL_NUM) < 666
		TRYCALLFORM SKILL_DAMAGETYPE_{CFLAG:ARG:입력행동}
		IF RESULT == 1
			CALLF AUTO_PU_SKILL_ラグナロク（ＡＮ）(ARG,"気合確保変数リセット")
		ELSEIF RESULT == 2
			CALLF AUTO_PU_SKILL_ラグナロク（ＡＮ）(ARG,"集中確保変数リセット")
		ENDIF
	ENDIF
ENDIF
SIF SKILLGAGE_F_GET(ARG,SKILL_NUM) < 666
	RETURN 0
CALLFORM SKILL_EFECT_{CFLAG:ARG:입력행동}
SIF RESULT != 1 || CFLAG:ARG:타겟 < 1 || CFLAG:ARG:타겟 > 16
	RETURN 0
LCOUNT:1 = CFLAG:ARG:PT플래그 == 0 ? 1 # 7
LCOUNT:2 = CFLAG:ARG:PT플래그 == 0 ? 7 # 17
ALIVE_FLAG = 0
FOR LCOUNT:0,LCOUNT:1,LCOUNT:2
	SIF POS(LCOUNT:0) > -1 && GET_STATE(CFLAG:POS(LCOUNT:0):상태이상) != "DYING" && CFLAG:ARG:타겟 != LCOUNT:0
		ALIVE_FLAG += 1
	SIF ALIVE_FLAG > 2
		BREAK
NEXT
SIF ALIVE_FLAG < 1
	RETURN 0
RETURN 1

;====================================================
;カウンター発動条件
;====================================================
;@SKILL_COUNTER_ACTIONABLE_ラグナロク（ＡＮ）,ARG,ARG:1
;RETURN RESULT

;====================================================
;ヒット時ダメージ前処理
;====================================================
;@SKILL_HIT_EFFECT_ラグナロク（ＡＮ）,ARG,ARG:1

;====================================================
;ダメージ発動時
;====================================================
;@SKILL_DAMAGE_EFFECT_ラグナロク（ＡＮ）,ARG,ARG:1

;====================================================
;行動によるスキルゲージ操作
;====================================================
@SKILLGAGE_CHARGE_ラグナロク（ＡＮ）,ARG,ARG:1
#DIM SKILL_NUM
#DIM L_SKILL_EFECT
#DIM L_MAX_H
;L_MAX_H = Hゲージ上限
SIF ARG < 0
	RETURN 0
SKILL_NUM = PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）")
;CSTR:ARG:104 = ラグナロク（ＡＮ）のスキルランク変数
IF SKILLGAGE_F_GET(ARG,SKILL_NUM) >= 666
	;ラグナロク（ＡＮ）起動中であり、尚且つDYINGでもなく、FLAMEでもない状態で分岐
	IF GET_STATE(CFLAG:ARG:상태이상) != "DYING" && GET_STATE(CFLAG:ARG:상태이상) != "FLAME"
		;FLAMEを使用者に再付与する
		CFLAG:ARG:상태이상 = GET_STATE_NUM("FLAME")
		CFLAG:ARG:상태이상경과턴수 = -666
	ENDIF
	RETURN 0
ENDIF

;====================================================
;特定のタイミングで行う処理
;====================================================
;戦闘開始時に行う処理
;@SKILL_BATTLE_START_ラグナロク（ＡＮ）,ARG
;RETURN 0

;戦闘終了時に行う処理
;@SKILL_BATTLE_END_ラグナロク（ＡＮ）,ARG
;RETURN 0

;ターン開始時に行う処理
;@SKILL_TURNSTART_ラグナロク（ＡＮ）,ARG
;RETURN 0

;ターン終了時に行う処理
@SKILL_TURNEND_ラグナロク（ＡＮ）,ARG
#DIM SKILL_NUM
#DIM L_GAGE
#DIM L_MAX_F
SIF ARG < 0
	RETURN 0
SKILL_NUM = PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）")
L_GAGE = SKILLGAGE_F_GET(ARG,SKILL_NUM)
IF GET_STATE(CFLAG:ARG:상태이상) == "DYING"
	;死んだ場合はFゲージを負の値でセットし、クールタイムゲージとして扱う
	IF L_GAGE != 0
		CALL SKILLGAGE_F_SET(ARG,SKILL_NUM,-70)
	ENDIF
	RETURN 0
ENDIF
;生存中でスキル効果中なら終了
SIF L_GAGE >= 666
	RETURN 0
;スキルランクに応じて最大値を設定
L_MAX_F = TOINT(AUTO_SPLIT("10_9_8_5","_",TOINT(CSTR:ARG:104)-1))
;Fゲージがクールタイム（負の値）として扱われているか否かで処理を変更
L_GAGE = L_GAGE > -1 ? MIN(L_GAGE + 5,L_MAX_F) # MIN(L_GAGE + 5,0)
CALL SKILLGAGE_F_SET(ARG,SKILL_NUM,L_GAGE)
RETURN 0

;SHOP画面を開いた時に行う処理
;@SKILL_INITIALIZE_ラグナロク（ＡＮ）,ARG
;#DIM SKILL_NUM
;SIF ARG < 0
;	RETURN 0
;SKILL_NUM = PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）")
;;スキルランクに応じて初期値を設定
;CALL SKILLGAGE_F_SET(ARG,SKILL_NUM,TOINT(AUTO_SPLIT("7_8_9_12","_",TOINT(CSTR:ARG:104)-1)))
;RETURN 0



;====================================================
;스킬 및 행동의 실행
;====================================================
@ACTION_ラグナロク（ＡＮ）,ARG,ARG:1,SKILL_NUM
#DIM SKILL_NUM
#DIM LCOUNT,3
#DIM L_T,4
#DIMS L_TARGS

SKILL_NUM = PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）")
IF SKILLGAGE_F_GET(ARG,SKILL_NUM) >= 666
	LCOUNT:1 = CFLAG:ARG:PT플래그 == 0 ? 1 # 7
	LCOUNT:2 = CFLAG:ARG:PT플래그 == 0 ? 7 # 17
	VARSET L_T
	FOR L_T:0,0,3
		;リスト初期化
		VARSET L_TARGS
		FOR LCOUNT:0,LCOUNT:1,LCOUNT:2
			;キャラが存在しない or DYINGである or 前の攻撃で攻撃済み（ターゲットと同一） or L_T配列に代入済みで次のループへ
			SIF POS(LCOUNT:0) < 0 || GET_STATE(CFLAG:POS(LCOUNT:0):상태이상) == "DYING" || LCOUNT:0 == CFLAG:ARG:타겟 || GROUPMATCH(LCOUNT:0,L_T:1,L_T:2,L_T:3)
				CONTINUE
			;普通にADD_SPLIT使えばええやん！と気づいてしまったのでADD_SPLITでリストを作る
			L_TARGS = %ADD_SPLIT(L_TARGS,"_",TOSTR(LCOUNT:0))%
			;SPLITを用いた疑似的なリストを作るための下準備（L_TARGS に (L_TARGS + 現在選択中のポジション番号を文字列化 + LCOUNT:0が(LCOUNT:2 -1)でなければ"_"も追加) を代入する）
			;L_TARGS = %L_TARGS + TOSTR(LCOUNT:0)%\@ LCOUNT:0 != (LCOUNT:2 - 1) ? _ #\@
			;L_TARGS = %L_TARGS + TOSTR(LCOUNT:0) + "_"%
			;SIF LCOUNT:0 != (LCOUNT:2 - 1)
			;	L_TARGS += "_"
		NEXT
		;PRINTFORMW 現在のL_TARGS %L_TARGS%
		;(L_T:0)番目のL_T配列にリスト内に保存されたポジション番号をランダム選択して代入
		L_T:(L_T:0 + 1) = TOINT(RAND_SPLIT(L_TARGS,"_"))
		;PRINTFORMW 現在のL_T:{L_T:0 + 1} {L_T:(L_T:0 + 1)}
		;ターゲットを発見できなければ終了
		IF L_T:(L_T:0 + 1) < 1
			;PRINTFORMW ポジション値{L_T:(L_T:0 + 1)}にいる敵を発見できないので終了
			BREAK
		ENDIF
		;L_T配列に代入されたポジション番号を対象に再行動を行う
		CALLFORM ACTION_{CFLAG:ARG:입력행동},ARG,L_T:(L_T:0 + 1)
		;２回目の追撃直後、スキルランクが4以上じゃないなら終了
		IF L_T:0 == 1 && TOINT(CSTR:ARG:104) < 4
			;PRINTFORMW スキルレベルが４に満たないので終了
			BREAK
		ENDIF
	NEXT
	TRYCALLFORM SKILL_DAMAGETYPE_{CFLAG:ARG:입력행동},ARG
	IF RESULT == 1
		CFLAG:ARG:기합플래그 = 0
		CFLAG:ARG:타인기합플래그 = 0
	ELSEIF RESULT == 2
		CFLAG:ARG:집중플래그 = 0
		CFLAG:ARG:타인집중플래그 = 0
	ENDIF
ELSE
	;メモ１：Fゲージは通常のSPとして扱い、負の値に反転する事でクールタイムゲージとして扱う
	;メモ２：Dゲージは今まで通りFLAMEのダメージ増加に使う変数
	CALL SKILLGAGE_F_SET,ARG,SKILL_NUM,666
	CALL SKILLGAGE_D_SET,ARG,SKILL_NUM,4
	SETCOLOR 0xdc143c
	PRINTFORML %CALLNAME:ARG%의 배후에서 종언의 거인이 기어나왔다…！！
	PRINTFORMW 종언의 거인이 %CALLNAME:ARG%의 몸을 태우고、황혼의 겁화를 전장에 흩뿌린다！！
	RESETCOLOR
	CFLAG:ARG:상태이상 = GET_STATE_NUM("FLAME")
	CFLAG:ARG:상태이상경과턴수 = -666
	CALL SYNC_STATUS,ARG
	BASE:ARG:ＨＰ = MAXBASE:ARG:ＨＰ
ENDIF
;CALL ATTACK_SINGLE,ARG,POS(ARG:1),SKILL_NUM;	単体攻撃
;CALL ATTACK_FIELD,ARG,ARG:1,SKILL_NUM;			範囲攻撃(列、全体)
;CALL ATTACK_SPREAD,ARG,ARG:1,SKILL_NUM;		拡散攻撃
;CALL ATTACK_RAND,ARG,ARG:1,SKILL_NUM;			ランダム攻撃


;====================================================
;실행내용 여기까지
;====================================================

;====================================================
;전투중 이외에서의 실행
;====================================================
;@ACTION_FIELD_ラグナロク（ＡＮ）,ARG,ARG:1,SKILL_NUM
;#DIM SKILL_NUM

;CALL HEAL_SINGLE,ARG,POS(ARG:1),SKILL_NUM	;単体回復
;CALL HEAL_FIELD,ARG,ARG:1,SKILL_NUM		;範囲回復(列、全体)
;CALL ALL_HEAL, POS(ARG:1), 0				;単体前回復

;====================================================
;실행내용 여기까지
;====================================================

;====================================================
;追加コマンド(EXTRAの下)
;====================================================
;@SKILL_SPECIAL_COMMAND_EXTRA_ラグナロク（ＡＮ）,ARG,LOCAL,SKILL_NUM
;#LOCALSIZE 1
;#DIM SKILL_NUM
;#DIM L_SKILL_EFECT
;C:(LOCAL++) = 10000 + SKILL_NUM;←必須
;RETURN LOCAL;←必須

;====================================================
;追加コマンド(MAGICの下、魔封だと消える)
;====================================================
;@SKILL_SPECIAL_COMMAND_MAGIC_ラグナロク（ＡＮ）,ARG,LOCAL,SKILL_NUM
;#DIM SKILL_NUM
;#LOCALSIZE 1
;PRINTFORML [{LOCAL}] 剣質変化
;C:(LOCAL++) = 10000 + SKILL_NUM;←必須
;RETURN LOCAL;←必須

;====================================================
;追加コマンド(一番下)
;====================================================
@SKILL_SPECIAL_COMMAND_ラグナロク（ＡＮ）,ARG,LOCAL,SKILL_NUM
#LOCALSIZE 1
#DIM SKILL_NUM
#DIM L_SKILL_EFECT
#DIM L_MAX_F
SKILL_NUM = PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）")
L_MAX_F = TOINT(AUTO_SPLIT("10_9_8_5","_",TOINT(CSTR:ARG:104)-1))
IF SKILLGAGE_F_GET(ARG,SKILL_NUM) >= L_MAX_F && SKILLGAGE_F_GET(ARG,SKILL_NUM) < 666 && HAVE_PU_SKILL(ARG,"劫火の余燼") > 0
	SETCOLOR 0xffa500
	PRINTFORML [{LOCAL}] 『라그나로크（ＡＮ）』ＲＥＡＤＹ！
	C:(LOCAL++) = 10000 + SKILL_NUM;←必須
	RESETCOLOR
ENDIF
RETURN LOCAL;←必須

;====================================================
;コマンド実行
;====================================================
@INPUT_COM_ラグナロク（ＡＮ）,ARG
#LOCALSIZE 1
#DIM SKILL_NUM
SKILL_NUM = PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）")
LOCAL = CFLAG:ARG:입력행동
CFLAG:ARG:입력행동 = SKILL_NUM
SETCOLOR 0x33ffcc
PRINTFORML ┏>CHARA━━━━━━━━━━┓　┏>ACT━━━━━━━━━━━━━━━━━━┓
PRINTFORM ┃[{CPOS(ARG),2}] %CALLNAME:ARG,21,LEFT%┃　┃
CALLFORM SKILL_NAME_ラグナロク（ＡＮ）,ARG
PRINTFORML %RESULTS,40,LEFT%┃
PRINTFORMW ┗━━━━━━━━━━━━━┛　┗━━━━━━━━━━━━━━━━━━━━┛
RESETCOLOR
SWAP TARGET,ARG
CALL ACTION_ラグナロク（ＡＮ）,TARGET,,SKILL_NUM
CALL 구상호출 , "BATTLE_MESSAGE" , TARGET , TARGET
SWAP TARGET,ARG
CFLAG:ARG:입력행동 = LOCAL
RETURN -1
;-1 再びコマンド選択へ
; 1 キャラ選択へ

;====================================================
;戦闘中スキルゲージの可視化
;====================================================
@SKILLGAGE_DISPLAY_ラグナロク（ＡＮ）,ARG
#DIM SKILL_NUM
#DIM GAGE_LIMIT
#DIM L_COLOR
#DIM L_GAGE
SKILL_NUM = PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）")
SIF !HAVE_PU_SKILL(ARG,"劫火の余燼")
	RETURN 0
;L_GAGEにスキルゲージFを代入
L_GAGE = SKILLGAGE_F_GET(ARG,SKILL_NUM)
;効果発動中に備えて固有の上限値と色を設定
GAGE_LIMIT = 666
L_COLOR = 0xff8c00
IF L_GAGE < 666
	;効果未発動なら獲得上限の値を、クールタイム中なら初期値をゲージ上限として代入
	GAGE_LIMIT = L_GAGE > -1 ? TOINT(AUTO_SPLIT("10_9_8_5","_",TOINT(CSTR:ARG:104)-1)) # 70
	L_COLOR = L_GAGE > -1 ? 0x9acd32 # 0x1e90ff
ENDIF
PRINTFORM \@L_GAGE > -1 ? ＥＸ―ＳＫＩＬＬ # ＣＯＯＬＴＩＭＥ\@|
CALL PRINT_COLORBAR, ABS(L_GAGE), GAGE_LIMIT , 25, UNICODE(0x2585), UNICODE(0x2585), L_COLOR, 0x696969
PRINTL

;　説明文の表示
@SKILL_EXPLAIN_ラグナロク（ＡＮ）,ARG
PRINTL 스킬게이지 추가。턴 경과 중에 행동 가능할 때 게이지가 쌓인다。게이지 가득 시 기동 가능。
PRINTL 기동 시、자신의 최대HP를 증가시킴과 동시에 HP가 완쾌한다。기동 중、자신에게 항상 FLAME을 부여。
PRINTL 여데미지가 대폭 상승한다。1체 대상 스킬로 공격했을 경우、전체에서 랜덤한 적에게 재공격을 행한다。
PRINTL 라운드가 경과할 때마다 FLAME의 슬립데미지가 상승한다。전투불능、전투이탈로 게이지 리셋。
PRINTL 게이지 리셋 시 쿨타임 게이지 추가。쿨타임 게이지 소실까지 스킬게이지가 쌓이지 않는다。
PRINTL 스킬랭크가 높을수록 데미지 상승률이 높아지고、스킬게이지 상한이 저하되며、재공격수가 증가한다。

;没
;@계승부위_ラグナロク（ＡＮ）,ARG

;사용조건
@SKILL_SPECIAL_ACTIONABLE_ラグナロク（ＡＮ）,ARG
RETURN 1

;타겟조건
;↓のSKILL_T_RESERVEがRETURN 1 の時に使用する
;@SKILL_SPECIAL_TARGET_ラグナロク（ＡＮ）,USE_CHARA,ARG
;#DIM USE_CHARA
;RETURN 0

;控えに使えるか
;@SKILL_T_RESERVE_ラグナロク（ＡＮ）,ARG
;RETURN 0

;어떤 배드스테이터스를 고칠수 있는가
;@SKILL_CURE_STATE_ラグナロク（ＡＮ）,USE_CHARA,ARG
;#DIM USE_CHARA
;SELECTCASE GET_STATE(ARG)
;	CASE "HAPPY","CLOSE"
;		RETURN 1
;ENDSELECT
;RETURN 0

;この技を複数持てるか
;@중복습득수_ラグナロク（ＡＮ）,ARG
;RETURN 1

;スキル重複で役に立つ関数
;HAVE_SKILL_OVERLAP(ARG,PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）"))

;スキルゲージで役に立つ関数
;SKILLGAGE_H_GET(ARG,PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）"))
;CALL SKILLGAGE_H_SET,ARG,PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）"),0

;====================================================
;独自処理
;====================================================
;（予定）と付けられている方は仮置きの物。実際に採用されるかどうかはわからない。
@AUTO_PU_SKILL_ラグナロク（ＡＮ）,ARG,ARGS = ""
#FUNCTION
#DIM SKILL_RANK
#DIM SKILL_NUM
#DIM FC_FLAG,2
#DIM FLAME_DOTS
;ARG = 使用者
;ARGS （ダメージ↑、被ダメージ↑、命中↑、回避↑、魔威↑、魔効↑、etc…）といった感じの奴
;文字列を参考にする都合上、どの文字列を使うか事前に定めておいた方がいいかも
;CSTR:ARG:100 = EXTRA勢出典作品、『アークナイツ』とでも書き込む（予定）
;CSTR:ARG:101 = EXTRA勢出典作品でどのキャラなのか、とりあえず『スルト（アークナイツ）』とでも書き込む（予定）
;CSTR:ARG:102 = 専用スキルその1のスキルランク変数として使用、この場合は『レーヴァテイン（ＡＮ）』が対象（予定）
;CSTR:ARG:103 = 専用スキルその2のスキルランク変数として使用、この場合は『災厄の巨焔』が対象（予定）
;CSTR:ARG:104 = 専用スキルその3のスキルランク変数として使用、この場合は『ラグナロク（ＡＮ）』が対象（予定）
;FC_FLAG = 気合、集中フラグ確保変数
SKILL_RANK = TOINT(CSTR:ARG:104)
SKILL_NUM = PU_SKILLNUM_GET(ARG,"ラグナロク（ＡＮ）")
SIF SKILL_NUM == 0
	RETURNF 0
SELECTCASE ARGS
	CASE "気合フラグ確保"
		;気合フラグを一時的に確保
		SIF FC_FLAG:0 == 1
			RETURNF 1
		IF CFLAG:ARG:기합플래그 > 0
			FC_FLAG:0 = 1
		ENDIF
	CASE "集中フラグ確保"
		;コンセフラグを一時的に確保
		SIF FC_FLAG:1 == 1
			RETURNF 1
		IF CFLAG:ARG:집중플래그 > 0
			FC_FLAG:1 = 1
		ENDIF
	CASE "気合確保変数リセット"
			FC_FLAG:0 = 0
	CASE "集中確保変数リセット"
			FC_FLAG:1 = 0
ENDSELECT
IF SKILLGAGE_F_GET(ARG,SKILL_NUM) >= 666
	SELECTCASE ARGS
		CASE "ダメージ↑"
			;気合、コンセフラグを一時的に確保
			IF CFLAG:ARG:기합플래그 > 0
				FC_FLAG:0 = 1
			ENDIF
			IF CFLAG:ARG:집중플래그 > 0
				FC_FLAG:1 = 1
			ENDIF
			;与ダメージとかに挟む場合の処理
			SELECTCASE SKILL_RANK
				CASE 1
					RETURNF 90
				CASE 2
					RETURNF 105
				CASE 3
					RETURNF 120
				CASE 4
					RETURNF 165
			ENDSELECT
		CASE "状態異常増大"
			SELECTCASE SKILLGAGE_D_GET(ARG,SKILL_NUM)
				CASE 4
					FLAME_DOTS = 24
				CASE 3
					FLAME_DOTS = 30
				CASE 2
					FLAME_DOTS = 36
				CASE 1
					FLAME_DOTS = 42
				CASE 0
					FLAME_DOTS = 48
			ENDSELECT
			RETURNF MAX(MAXBASE:ARG:ＨＰ*FLAME_DOTS/100,1)
		CASE "状態異常延長"
			RETURNF 1
		CASE "ＨＰ増加"
			RETURNF 1
		CASE "回復阻害"
			SIF SKILLGAGE_F_GET(ARG,SKILL_NUM) >= 666
				RETURNF 1
			RETURNF 0
		;CASE "Fゲージリセット"
		;	RETURNF SKILL_NUM
		CASE "気合集中フラグ返却"
			IF FC_FLAG:0 == 1
				CFLAG:ARG:기합플래그 = 1
			ENDIF
			IF FC_FLAG:1 == 1
				CFLAG:ARG:집중플래그 = 1
			ENDIF
		CASEELSE
			RETURNF 0
	ENDSELECT
ENDIF
RETURNF 0
