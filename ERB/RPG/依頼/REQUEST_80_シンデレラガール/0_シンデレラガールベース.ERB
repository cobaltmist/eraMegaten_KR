;이벤트は全部ビット演算を使うことにする
;改造)	이벤트1つ毎に2つのビットを사용し未読체크を行う様に
;		その関係で1つの変数に保存できる이벤트数は64個から32個に減少
;이벤트ベースは内部処理に特化し、【이벤트作りたい人が見なくてもいい部分】として独立化。


;追記)	戦闘中イベントの処理を実装するに際して【現在実行中のイベント】を取得しておきたかったので
;		イベント呼び出し前に一行ずつ追加し、의뢰플래그:80:11に【実行するイベントのタイトル番号】を記録させる処理を追加。
;		ただし、引用する의뢰플래그に関してはL_INDEXの最終値+1を参照するため、そこに関して後々弄る必要はない
;====================
;조건
;====================
@PLAYABLE_REQUEST_80
#DIM L_INDEX
;메가텐계 이벤트이외 불허가의 경우
SIF GETBIT(FLAG:EXTRA이벤트설정, 0) == 0 || GETBIT(FLAG:EXTRA이벤트필터, 7) == 1
	RETURN 0

VARSET LOCAL
;인덱스 참조
;참조하는 배열과 BIT값을 얻기 위해 이중 루프
;현재는 20×32의 640개까지 작성할 수 있는 계산
;늘리고 싶을 때는 ↓ 행의 "LOCAL,0,10"의 최후의 10을 늘리면 OK(최대100)
FOR L_INDEX,0,20
	FOR LOCAL,0,32
		SIF GETBIT(의뢰플래그:80:L_INDEX,LOCAL)
			CONTINUE
		TRYCCALLFORM REQUEST_80_PLAYABLE_{L_INDEX} , LOCAL
		CATCH
			BREAK
		ENDCATCH
		SIF !RESULT && !GETBIT(의뢰플래그:80:L_INDEX,LOCAL)
			CONTINUE
		IF !GETBIT(의뢰플래그:80:L_INDEX,LOCAL+32)
			SETBIT 의뢰플래그:80:L_INDEX,LOCAL+32
			CALLFORM REQUEST_80_TITLELIST_{L_INDEX} , LOCAL
			LOCALS = （EX:IM＠S）의뢰 【신데렐라걸【%RESULTS%】】%조사만처리(RESULTS,"가")% 출현！
			CALL MESSAGE_B(1, LOCALS)
		ENDIF
		;아직 못 본 이벤트의 수를 카운트
		SIF !GETBIT(의뢰플래그:80:L_INDEX,LOCAL)
			LOCAL:1++
		LOCAL:2++
	NEXT
NEXT
IF LOCAL:1 > 0
	RESULTS = （EX:IM＠S）신데렐라걸\(신규{LOCAL:1}개\)
ELSE
	RESULTS = （EX:IM＠S）신데렐라걸
ENDIF
SIF LOCAL:2
	RETURN 1
;====================
;説明
;====================
@EXPLAIN_REQUEST_80

;====================
;内容
;====================
@REQUEST_80
#DIM L_INDEX
CUSTOMDRAWLINE =
PRINTFORML 어느 이벤트를 봅니까?
CUSTOMDRAWLINE =

FOR L_INDEX,0,10
	FOR LOCAL,0,32
		SIF GETBIT(의뢰플래그:80:L_INDEX,LOCAL)
			CONTINUE
		TRYCCALLFORM REQUEST_80_PLAYABLE_{L_INDEX} , LOCAL
		CATCH
			BREAK
		ENDCATCH
		SIF !RESULT && !GETBIT(의뢰플래그:80:L_INDEX,LOCAL)
			CONTINUE
		CALLFORM REQUEST_80_TITLELIST_{L_INDEX} , LOCAL
		SIF RESULT == 0
			CONTINUE
		PRINTFORM [{L_INDEX*100+LOCAL,4}] %RESULTS%
		PRINTL
	NEXT
NEXT
PRINTFORML [9999]돌아간다
$INPUT_LOOP
INPUT
SIF RESULT == 9999
	RETURN
TFLAG:0 = RESULT
LOCAL:3 = RESULT / 100
LOCAL:4 = RESULT % 100
TRYCCALLFORM REQUEST_80_PLAYABLE_{LOCAL:3} , LOCAL:4
	SIF GETBIT(의뢰플래그:80:L_INDEX,LOCAL)
		GOTO END_EVENT
	SIF !RESULT && !GETBIT(의뢰플래그:80:L_INDEX,LOCAL)
		GOTO END_EVENT
	의뢰플래그:80:(L_INDEX+1)=LOCAL:4;現在実行中のイベントの타이틀番号を依頼フラグ80:(L_INDEX+1)に記録する。
	CALLFORM REQUEST_80_TITLELIST_{LOCAL:3} , LOCAL:4
	CALLFORM REQUEST_80_%RESULTS%
	의뢰플래그:80:(L_INDEX+1)=0;타이틀番号の記録を初期化。
	PRINTL
	PRINTL
	;既読にする
	SETBIT 의뢰플래그:80:(LOCAL:3),LOCAL:4
	RESTART
CATCH
ENDCATCH
$END_EVENT
CLEARLINE 1
GOTO INPUT_LOOP

;====================
;出現チェック関数
;====================
@REQUEST80_APP_CHECK,ARG,ARG:1
#FUNCTION
RETURNF GETBIT(의뢰플래그:80:ARG,ARG:1+32)

;====================
;既読チェック関数
;====================
@REQUEST80_READ_CHECK,ARG,ARG:1
#FUNCTION
RETURNF GETBIT(의뢰플래그:80:ARG,ARG:1)

;------
;使用例
;------
;深淵なる闇からの誘いをクリアしたかどうか
;SIF REQUEST80_READ_CHECK(0,2)
;	RETURN 1

;====================
;出現チェック関数(タイトルで)
;====================
@REQUEST80_APP_CHECK_T,ARGS = ""
#DIM L_INDEX,2
SIF ARGS == ""
	RETURN 0
FOR L_INDEX,0,20
	FOR L_INDEX:1,0,32
		TRYCCALLFORM REQUEST_80_TITLELIST_{L_INDEX} , L_INDEX:1
			SIF ARGS == RESULTS
				RETURN GETBIT(의뢰플래그:80:L_INDEX,L_INDEX:1+32)
		CATCH
			BREAK
		ENDCATCH
	NEXT
NEXT
RETURN 0

;====================
;既読チェック関数(タイトルで)
;====================
@REQUEST80_READ_CHECK_T,ARGS = ""
#DIM L_INDEX,2
SIF ARGS == ""
	RETURN 0
FOR L_INDEX,0,20
	FOR L_INDEX:1,0,32
		TRYCCALLFORM REQUEST_80_TITLELIST_{L_INDEX} , L_INDEX:1
			SIF ARGS == RESULTS
				RETURN GETBIT(의뢰플래그:80:L_INDEX,L_INDEX:1)
		CATCH
			BREAK
		ENDCATCH
	NEXT
NEXT
RETURN 0

;------
;使用例
;------
;深淵なる闇からの誘いを既読したかどうか
;CALL REQUEST80_READ_CHECK_T("深淵なる闇からの誘い")
;SIF RESULT
;	RETURN 1