;===========================
;ランダムダンジョンMAP迷宮(タルタロスを参考に作成）
;===========================

@RAND_DANGEON_MAKE
#DIM DYNAMIC DivX, 32
#DIM DYNAMIC DivY1
#DIM DYNAMIC DivY2
#DIM DYNAMIC RoomSize1X
#DIM DYNAMIC RoomSize1Y
#DIM DYNAMIC RoomSize2X
#DIM DYNAMIC RoomSize2Y
#DIM DYNAMIC RoomSize3X
#DIM DYNAMIC RoomSize3Y
#DIM DYNAMIC RoomSize4X
#DIM DYNAMIC RoomSize4Y
#DIM DYNAMIC RoomPoint1X
#DIM DYNAMIC RoomPoint1Y
#DIM DYNAMIC RoomPoint2X
#DIM DYNAMIC RoomPoint2Y
#DIM DYNAMIC RoomPoint3X
#DIM DYNAMIC RoomPoint3Y
#DIM DYNAMIC RoomPoint4X
#DIM DYNAMIC RoomPoint4Y

;=======================================================================
;マップデータ消去
;=======================================================================

FOR LOCAL:1, 0 , FLAG:최대Y
	FOR LOCAL, 0, FLAG:최대X
		CALLF DPOINT("SET" , 0 , LOCAL , LOCAL:1 , FLAG:현M , @"던전%TOSTR(FLAG:현던전 , "00")%")
	NEXT
NEXT


;=======================================================================
;マップ
;=======================================================================
SELECTCASE FLAG:현M
	CASE 9
		;ランダム迷路
		IF 의뢰플래그:108:3 == 8
			FLAG:최대X = 30
			FLAG:최대Y = 10
						;					   1		 2	
			;						 01234567890123456789012345678
			CALL MAKE_FLOOR_LINE, 0,"                             "
			CALL MAKE_FLOOR_LINE, 1,"             11111           "
			CALL MAKE_FLOOR_LINE, 2,"             11111           "
			CALL MAKE_FLOOR_LINE, 3,"             11111           "
			CALL MAKE_FLOOR_LINE, 4,"             11111           "
			CALL MAKE_FLOOR_LINE, 5,"             11111           "
			CALL MAKE_FLOOR_LINE, 6,"             11111           "
			CALL MAKE_FLOOR_LINE, 7,"             11111           "
			CALL MAKE_FLOOR_LINE, 8,"             11111           "
			CALL MAKE_FLOOR_LINE, 9,"               d             "
		;地下迷宮
		ELSE
			FLAG:최대X = 30
			FLAG:최대Y = 10
						;					   1		 2	
			;						 01234567890123456789012345678
			CALL MAKE_FLOOR_LINE, 0,"                             "
			CALL MAKE_FLOOR_LINE, 1,"             11111           "
			CALL MAKE_FLOOR_LINE, 2,"             11711           "
			CALL MAKE_FLOOR_LINE, 3,"             11111           "
			CALL MAKE_FLOOR_LINE, 4,"             11111           "
			CALL MAKE_FLOOR_LINE, 5,"             11111           "
			CALL MAKE_FLOOR_LINE, 6,"             11111           "
			CALL MAKE_FLOOR_LINE, 7,"             11111           "
			CALL MAKE_FLOOR_LINE, 8,"             11111           "
			CALL MAKE_FLOOR_LINE, 9,"               8             "
			
			;依頼66ではX == 15,Y == 3にイベントを設置
			CALL SET_TILE, 15, 3, 의뢰플래그:108:1, 66, 4
		ENDIF
	CASE 0
		FLAG:최대X = 30
		FLAG:최대Y = 30
					;					   1		 2	
		;						 01234567890123456789012345678
		CALL MAKE_FLOOR_LINE, 0,"                             "
		CALL MAKE_FLOOR_LINE, 1,"             11111           "
		CALL MAKE_FLOOR_LINE, 2,"             11411           "
		CALL MAKE_FLOOR_LINE, 3,"             11111           "
		CALL MAKE_FLOOR_LINE, 4,"             11111           "
		CALL MAKE_FLOOR_LINE, 5,"             11111           "
		CALL MAKE_FLOOR_LINE, 6,"             11111           "
		CALL MAKE_FLOOR_LINE, 7,"             11111           "
		CALL MAKE_FLOOR_LINE, 8,"             11111           "
		CALL MAKE_FLOOR_LINE, 9,"                            "
		
		;依頼71ではX == 15,Y == 2に人物を設置
			CALL SET_TILE, 15, 2, 의뢰플래그:108:1, 71, 14
		IF 의뢰플래그:108:4 >= 1
			CALL SET_TILE, 13, 3, 의뢰플래그:108:1, 71, 14
			CALL SET_TILE, 13, 5, 의뢰플래그:108:1, 71, 14
			CALL SET_TILE, 13, 7, 의뢰플래그:108:1, 71, 14
			CALL SET_TILE, 17, 3, 의뢰플래그:108:1, 71, 14
			CALL SET_TILE, 17, 5, 의뢰플래그:108:1, 71, 14
			CALL SET_TILE, 17, 7, 의뢰플래그:108:1, 71, 14
		ENDIF
			
	CASEELSE
		PRINTFORML 
		PRINTFORML ダンジョン構築中
		FLAG:최대X = 30
		FLAG:최대Y = 29
					;					   1		 2	
		;						 012345678901234567890123456789
		CALL MAKE_FLOOR_LINE, 0,"                             "
		CALL MAKE_FLOOR_LINE, 1," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE, 2," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE, 3," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE, 4," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE, 5," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE, 6," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE, 7," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE, 8," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE, 9," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE,10," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE,11," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE,12," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE,13," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE,14," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE,15," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE,16," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE,17," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE,18," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE,19," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE,20," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE,21," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE,22," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE,23," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE,24," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE,25," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE,26," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
		CALL MAKE_FLOOR_LINE,27," 111111111111111111111111111 "
		CALL MAKE_FLOOR_LINE,28,"                             "
		;						 01234567890123456789012345678

		;迷路作成
		FOR LOCAL, 1, 31, 2
			FOR LOCAL:1, 1, 30, 1
				SETBIT (DivX:LOCAL), LOCAL:1
			NEXT
		NEXT
		
		FOR LOCAL, 2, 32, 2
			FOR LOCAL:1, 1, 31, 2
				SETBIT (DivX:LOCAL), LOCAL:1
			NEXT
		NEXT
		
		FOR LOCAL, 2, 30, 2;行、Ｙ
			FOR LOCAL:2, 2, 28, 2;列、Ｘ
				IF LOCAL == 2
					LOCAL:3 = 4
				ELSE
					LOCAL:3 = 3
				ENDIF
				WHILE LOCAL <= 31
					SELECTCASE RAND:(LOCAL:3)
						;左
						CASE 0
							GETBIT (DivX:LOCAL), (LOCAL:2 - 1)
							IF RESULT == 1
								LOCAL:4 = LOCAL:2 - 1
								CALL SET_TILE, LOCAL:4 , LOCAL , , , 0
								CLEARBIT (DivX:LOCAL), LOCAL:4
								BREAK
							ENDIF
						;下
						CASE 1
							GETBIT (DivX:(LOCAL + 1)), (LOCAL:2)
							IF RESULT == 1
								LOCAL:4 = LOCAL + 1
								CALL SET_TILE, LOCAL:2 , LOCAL:4 , , , 0
								CLEARBIT (DivX:(LOCAL:4)), LOCAL:2
								BREAK
							ENDIF
						;右
						CASE 2
							GETBIT (DivX:LOCAL), (LOCAL:2 + 1)
							IF RESULT == 1
								LOCAL:4 = LOCAL:2 + 1
								CALL SET_TILE, LOCAL:4 , LOCAL , , , 0
								CLEARBIT (DivX:LOCAL), LOCAL:4
								BREAK
							ENDIF
						;上
						CASE 3
							CALL SET_TILE, LOCAL:2 , 1 , , , 0
							BREAK
					ENDSELECT
				WEND
			NEXT
		NEXT

		;全体を上下左右に四分割
		DivX = RAND(14, 16)
		DivY1 = RAND(5, 25)
		DivY2 = RAND(5, 25)
		
		
;		FOR LOCAL, 1, 29
;			CALL SET_TILE, DivX , LOCAL , , , 1
;		NEXT
;		FOR LOCAL, DivX, 29
;			CALL SET_TILE, LOCAL , DivY1 , , , 1
;		NEXT
;		FOR LOCAL, 1, DivX
;			CALL SET_TILE, LOCAL , DivY2 , , , 1
;		NEXT

		
		;部屋のXY寸法*(1/2)を規定(１、左上、２、右上、３、左下、４、右下）
		Roomsize1X =RAND(3,(DivX-1))  /2
		Roomsize1Y =RAND(3,(DivY2-1)) /2
		Roomsize2X =RAND(3,(29-DivX)) /2
		Roomsize2Y =RAND(3,(DivY1-1)) /2
		Roomsize3X =RAND(3,(DivX-1))  /2
		Roomsize3Y =RAND(3,(29-DivY2))/2
		Roomsize4X =RAND(3,(29-DivX)) /2
		Roomsize4Y =RAND(3,(29-DivY1))/2
		
		;部屋の中心位置を規定
		Roompoint1X = RAND((1+RoomSize1X),(DivX-RoomSize1X))
		Roompoint1Y = RAND((1+RoomSize1Y),(DivY2-RoomSize1Y))
		Roompoint2X = RAND((DivX+RoomSize2X),(29-RoomSize2X))
		Roompoint2Y = RAND((1+RoomSize2Y),(DivY1-Roomsize2Y))
		Roompoint3X = RAND((1+RoomSize3X),(DivX-RoomSize3X))
		Roompoint3Y = RAND((DivY2+RoomSize3Y),(29-RoomSize3Y))
		Roompoint4X = RAND((DivX+RoomSize4X),(29-RoomSize4X))
		Roompoint4Y = RAND((DivY1+RoomSize4Y),(29-Roomsize4Y))
		
		;ランダム迷宮では部屋の寸法は5×5で固定とするため、再度XY寸法を規定
		IF 의뢰플래그:108:3 == 8
			Roomsize1X = 2
			Roomsize1Y = 2
			Roomsize2X = 2
			Roomsize2Y = 2
			Roomsize3X = 2
			Roomsize3Y = 2
			Roomsize4X = 2
			Roomsize4Y = 2
		ENDIF
		
		;部屋を形成
		FOR LOCAL:2, (RoomPoint1Y - RoomSize1Y), (RoomPoint1Y + RoomSize1Y)
			FOR LOCAL, (RoomPoint1X - RoomSize1X), (RoomPoint1X + RoomSize1X)
				CALL SET_TILE, LOCAL , LOCAL:2 , , , 1
			NEXT
		NEXT
		
		FOR LOCAL:2, (RoomPoint2Y - RoomSize2Y), (RoomPoint2Y + RoomSize2Y)
			FOR LOCAL, (RoomPoint2X - RoomSize2X), (RoomPoint2X + RoomSize2X)
				CALL SET_TILE, LOCAL, LOCAL:2, , , 1
			NEXT
		NEXT
		
		FOR LOCAL:2, (RoomPoint3Y - RoomSize3Y), (RoomPoint3Y + RoomSize3Y)
			FOR LOCAL, (RoomPoint3X - RoomSize3X), (RoomPoint3X + RoomSize3X)
				CALL SET_TILE, LOCAL , LOCAL:2 , , , 1
			NEXT
		NEXT
		
		FOR LOCAL:2, (RoomPoint4Y - RoomSize4Y), (RoomPoint4Y + RoomSize4Y)
			FOR LOCAL, (RoomPoint4X - RoomSize4X), (RoomPoint4X + RoomSize4X)
				CALL SET_TILE, LOCAL , LOCAL:2 , , , 1
			NEXT
		NEXT
		
		;開始地点
		;地下迷宮は中央に部屋を配置
		IF 의뢰플래그:108:3 == 6 && FLAG:현M == 8
			FOR LOCAL, 14, 16
				FOR LOCAL:2, 14, 16
					CALL SET_TILE, LOCAL , LOCAL:2 , , , 1
				NEXT
			NEXT
		;ランダム迷宮は上の中央に部屋を配置
		ELSEIF 의뢰플래그:108:3 == 8
			IF FLAG:현M == 8
				FOR LOCAL, 14, 17
					FOR LOCAL:2, 1, 3
						CALL SET_TILE, LOCAL , LOCAL:2 , , , 1
					NEXT
				NEXT
			ELSE
				FOR LOCAL, (던전플래그:108:51 - 1), (던전플래그:108:51 + 2)
					FOR LOCAL:2, 1, 3
						CALL SET_TILE, LOCAL , LOCAL:2 , , , 1
					NEXT
				NEXT
			ENDIF
		ENDIF
		
		;地下迷宮の処理
		IF 의뢰플래그:108:3 == 6
		;部屋から分割線に向かう通路を形成
			FOR LOCAL, (RoomPoint1X), (DivX)
				CALL SET_TILE, LOCAL , (RoomPoint1Y) , , , 1
			NEXT
			
			FOR LOCAL, (RoomPoint1Y), (DivY2)
				CALL SET_TILE, (RoomPoint1X) , LOCAL , , , 1
			NEXT
			
			FOR LOCAL, (DivX), (RoomPoint2X)
				CALL SET_TILE, LOCAL , (RoomPoint2Y) , , , 1
			NEXT
			
			FOR LOCAL, (RoomPoint2Y), (DivY2)
				CALL SET_TILE, (RoomPoint1X) , LOCAL , , , 1
			NEXT
			
			
			FOR LOCAL, (RoomPoint3X), (DivX)
				CALL SET_TILE, LOCAL , (RoomPoint3Y) , , , 1
			NEXT
			
			FOR LOCAL, (DivY2), (RoomPoint3Y)
				CALL SET_TILE, (RoomPoint3X) , LOCAL , , , 1
			NEXT
			
			FOR LOCAL, (DivX), (RoomPoint4X)
				CALL SET_TILE, LOCAL , (RoomPoint4Y) , , , 1
			NEXT
			
			FOR LOCAL, (DivY1), (RoomPoint4Y)
				CALL SET_TILE, (RoomPoint4X) , LOCAL , , , 1
			NEXT
			;周辺の余計な通路を削除
			FOR LOCAL:2, 0, (RoomPoint1Y + RoomSize1Y)
				FOR LOCAL, 0 , (RoomPoint1X - RoomSize1X -1)
					CALL SET_TILE, LOCAL , LOCAL:2 , , , 0
				NEXT
			NEXT
			FOR LOCAL:2, 0, (RoomPoint1Y - RoomSize1Y - 1)
				FOR LOCAL, 0 , (RoomPoint1X + RoomSize1X)
					CALL SET_TILE, LOCAL , LOCAL:2 , , , 0
				NEXT
			NEXT
			FOR LOCAL:2, 0, (RoomPoint2Y - RoomSize2Y - 1 )
				FOR LOCAL, (RoomPoint2X - RoomSize2X + 1), 29
					CALL SET_TILE, LOCAL, LOCAL:2, , , 0
				NEXT
			NEXT
			FOR LOCAL:2, 0, 15
				FOR LOCAL, (RoomPoint2X + RoomSize2X + 1), 29
					CALL SET_TILE, LOCAL, LOCAL:2, , , 0
				NEXT
			NEXT
			FOR LOCAL:2, 15, 29
				FOR LOCAL, 0 , (RoomPoint3X - RoomSize3X -1)
					CALL SET_TILE, LOCAL , LOCAL:2 , , , 0
				NEXT
			NEXT
			FOR LOCAL:2, (RoomPoint3Y + RoomSize3Y + 1), 29
				FOR LOCAL, 0 ,15
					CALL SET_TILE, LOCAL , LOCAL:2 , , , 0
				NEXT
			NEXT
			FOR LOCAL:2, 15, 29
				FOR LOCAL, (RoomPoint4X + RoomSize4X + 1), 29
					CALL SET_TILE, LOCAL , LOCAL:2 , , , 0
				NEXT
			NEXT
			FOR LOCAL:2, (RoomPoint4Y + RoomSize4Y + 1), 29
				FOR LOCAL, 15 ,29
					CALL SET_TILE, LOCAL , LOCAL:2 , , , 0
				NEXT
			NEXT
			
			;階段を設置（どれかの部屋の中央に）
			SELECTCASE RAND:4
				CASE 0
					CALL SET_TILE, RoomPoint1X , RoomPoint1Y , , , 7
					던전플래그:108:51 = RoomPoint1X
					던전플래그:108:52 = RoomPoint1Y
				CASE 1
					CALL SET_TILE, RoomPoint2X , RoomPoint2Y , , , 7
					던전플래그:108:51 = RoomPoint2X
					던전플래그:108:52 = RoomPoint2Y
				CASE 2
					CALL SET_TILE, RoomPoint3X , RoomPoint3Y , , , 7
					던전플래그:108:51 = RoomPoint3X
					던전플래그:108:52 = RoomPoint3Y
				CASE 3
					CALL SET_TILE, RoomPoint4X , RoomPoint4Y , , , 7
					던전플래그:108:51 = RoomPoint4X
					던전플래그:108:52 = RoomPoint4Y
			ENDSELECT
		ENDIF
		
		;ランダム迷宮は上の何処かに次のフロアへの移動マスと部屋を設置
		IF 의뢰플래그:108:3 == 8
			던전플래그:108:51 = RAND(3,27)
			FOR LOCAL, (던전플래그:108:51 - 1), (던전플래그:108:51 + 2)
				FOR LOCAL:2, 26, 29
					CALL SET_TILE, LOCAL, LOCAL:2, , , 1
				NEXT
			NEXT
			CALL SET_TILE, (던전플래그:108:51), 28, , , 34 ;(↓)
		ENDIF
		
		IF 의뢰플래그:108:1 == 59
			;宝箱を設置（部屋の中央の隣に50%の確立で）
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint1X , RoomPoint1Y+1 , , , 3
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint2X , RoomPoint2Y+1 , , , 3
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint3X , RoomPoint3Y-1 , , , 3
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint4X , RoomPoint4Y-1 , , , 3
		;依頼60（カノーネ岩採取）ではイベント（岩）を設置
		ELSEIF 의뢰플래그:108:1 == 60
			;部屋の中央の隣に50%の確立で
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint1X , RoomPoint1Y+1 , , , 24
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint2X , RoomPoint2Y+1 , , , 24
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint3X , RoomPoint3Y-1 , , , 24
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint4X , RoomPoint4Y-1 , , , 24
		;依頼62(SQダンジョン）.依頼66、71 ではイベントを設置
		ELSEIF 의뢰플래그:108:1 == 62 || 의뢰플래그:108:1 == 66 || 의뢰플래그:108:1 == 71
			;部屋の中央の隣に50%の確立で
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint1X , RoomPoint1Y+1 , , , 4
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint2X , RoomPoint2Y+1 , , , 4
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint3X , RoomPoint3Y-1 , , , 4
			SIF RAND:2 == 0
				CALL SET_TILE, RoomPoint4X , RoomPoint4Y-1 , , , 4
		ENDIF
RETURN 1
ENDSELECT



;===================================================================
;ランダムダンジョンの階段
;===================================================================
@RAND_DUNGEON_DOWNSTAIRS
IF FLAG:현M == 1
	CALL DUNGEON_DOWNSTAIRS,0,15,7
ELSEIF FLAG:현M == 9
	CALL DUNGEON_DOWNSTAIRS,(FLAG:현M-1), 15, 15
ELSE
	CALL DUNGEON_DOWNSTAIRS,(FLAG:현M-1), (던전플래그:108:51), (던전플래그:108:52)
ENDIF

;現在地が壁の中の場合、ランダムな平地にワープする
CALL DANDOM_WARP_FROM_WALL


;===================================================================
;ランダムダンジョンの宝箱
;===================================================================
@TREASURE_RAND_DANGEON
SELECTCASE RAND:3
	CASE 0
		CALL GET_TREASURE, [[아이템:마석]], 1
	CASE 1
		CALL GET_TREASURE, [[아이템:챠크라드롭]], 1
	CASE 2
		CALL GET_TREASURE_MONEY,1,RAND:100, , 
ENDSELECT

;===================================================================
;その他関数
;===================================================================
;現在地が壁の中の場合、@の座標をランダムな平地に変更する　※サキュバスダンジョンにて階段を降りた先が壁の中になる問題の対応として作成
@DANDOM_WARP_FROM_WALL
;変数定義
#DIM POINT_X			;X座標
#DIM POINT_Y			;Y座標
#DIM LOOP_CNT_i			;ループ回数のカウンタ

;変数の初期化
;現時点の@のX,Y座標を取得する
POINT_X = FLAG:현X
POINT_Y = FLAG:현Y
LOOP_CNT_i = 1

;現在の座標が壁の中である場合、フロア内のランダムな平地の座標を取得する
IF DA:POINT_X:POINT_Y == 0
	WHILE 1
		;ランダムな座標を取得する
		POINT_X = RAND:(FLAG:최대X)
		POINT_Y = RAND:(FLAG:최대Y)

		;取得した座標が壁ではない(平地である)場合、@の現在地をその座標に設定して終了する
		IF DA:POINT_X:POINT_Y != 0
			FLAG:현X = POINT_X
			FLAG:현Y = POINT_Y
			BREAK
		ENDIF
		
		;ループ数が200を超えたらミスによる無限ループの可能性を考えて終了する
		IF LOOP_CNT_i >= 200
			BREAK
		ENDIF
		LOOP_CNT_i += 1
	WEND
ENDIF
