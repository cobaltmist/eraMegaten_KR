;=======================================================================
;フロア名表示
;=======================================================================
@FLOORNAME_2
;============
;軽子坂高校
;============
PRINT 카루코자카 고교
SELECTCASE FLAG:현M
	CASE 0
		PRINTL   Ｂ１Ｆ
	CASE 1
		PRINTL   １Ｆ
	CASE 2
		PRINTL   ２Ｆ
	CASE 3
		PRINTL   ３Ｆ
	CASE 4
		PRINTL   ４Ｆ
	CASE 5
		PRINTL   ５Ｆ
	CASEELSE
		PRINTL
ENDSELECT

;=======================================================================
;フロアデータ
;=======================================================================

;0：壁　1：床もしくは通路　2：扉　3：宝箱　4：イベント　5：罠　6：上り階段 7：下り階段　8：出口　9：その他特殊処理等
;これらの内、3～9が代入されているマスに、個別の番号を与える処理を実行します。
;この処理を行った後、これらのマスには 「マップ番号*1000 + そのマスがそのマップで左上から数えて何個目のARGタイプのマスか*10 + ARG」が代入されます
;例えば 2003 であった場合、「2番のマップ＝３Ｆで、左上から数えて0個目の3＝宝箱である」という事を意味しています
;尚、0～2はどのマップにも大量に設置されるので、ここでは基本的に個別の番号を与えません。


@MAKE_FLOOR_2
;==================
;0.軽子坂高校
;==================
SELECTCASE FLAG:현M
	CASE 0
	;B１階
		FLAG:최대X = 10
		FLAG:최대Y = 6
		;						01234567890
		CALL MAKE_FLOOR_LINE,0,"          "
		CALL MAKE_FLOOR_LINE,1," 12111111 "
		CALL MAKE_FLOOR_LINE,2,"   1  1 18"
		CALL MAKE_FLOOR_LINE,3," 1216   1 "
		CALL MAKE_FLOOR_LINE,4,"      121 "
		CALL MAKE_FLOOR_LINE,5,"          "
		
		;宝箱の設置
		CALL SET_TILE,1,3,던전플래그:2:0,0,3
		
		;イベントの設置
		CALL SET_TILE,8,2,던전플래그:2:12,0,4

	CASE 1
	;1階
		FLAG:최대X = 15
		FLAG:최대Y = 15
		;						 0123456789012345
		CALL MAKE_FLOOR_LINE,0,	"               "
		CALL MAKE_FLOOR_LINE,1,	" 1211121111121 "
		CALL MAKE_FLOOR_LINE,2,	"     2 1       "
		CALL MAKE_FLOOR_LINE,3,	" 11111 1 1 1   "
		CALL MAKE_FLOOR_LINE,4,	" 1   1 1 2 1   "
		CALL MAKE_FLOOR_LINE,5,	" 1 6 1 1111121 "
		CALL MAKE_FLOOR_LINE,6,	" 1 2 1     1   "
		CALL MAKE_FLOOR_LINE,7,	" 11111   121   "
		CALL MAKE_FLOOR_LINE,8,	"           1   "
		CALL MAKE_FLOOR_LINE,9,	"       1 11121 "
		CALL MAKE_FLOOR_LINE,10,"       2 111   "
		CALL MAKE_FLOOR_LINE,11,"       1111111 "
		CALL MAKE_FLOOR_LINE,12,"         2 1   "
		CALL MAKE_FLOOR_LINE,13,"       721 121 "
		CALL MAKE_FLOOR_LINE,14,"               "
		
		;宝箱の設置
		CALL SET_TILE,11,3,던전플래그:2:1,0,3
	CASE 2
	;2階
		FLAG:최대X = 9
		FLAG:최대Y = 17
		;						 0123456789
		CALL MAKE_FLOOR_LINE,0,	"         "
		CALL MAKE_FLOOR_LINE,1,	" 11111   "
		CALL MAKE_FLOOR_LINE,2,	" 1   2   "
		CALL MAKE_FLOOR_LINE,3,	" 1 1 6   "
		CALL MAKE_FLOOR_LINE,4,	" 1 2     "
		CALL MAKE_FLOOR_LINE,5,	" 11111   "
		CALL MAKE_FLOOR_LINE,6,	" 2       "
		CALL MAKE_FLOOR_LINE,7,	" 11111 1 "
		CALL MAKE_FLOOR_LINE,8,	" 2   2 2 "
		CALL MAKE_FLOOR_LINE,9,	" 1 12111 "
		CALL MAKE_FLOOR_LINE,10,"       1 "
		CALL MAKE_FLOOR_LINE,11,"   111 1 "
		CALL MAKE_FLOOR_LINE,12,"   2 1 1 "
		CALL MAKE_FLOOR_LINE,13,"   7 121 "
		CALL MAKE_FLOOR_LINE,14,"     1 2 "
		CALL MAKE_FLOOR_LINE,15,"   121 1 "
		CALL MAKE_FLOOR_LINE,16,"         "
		
		;宝箱の設置
		CALL SET_TILE,5,5,던전플래그:2:2,0,3
	CASE 3
	;3階
		FLAG:최대X = 17
		FLAG:최대Y = 9
		CALL MAKE_FLOOR_LINE,0,"                 "
		CALL MAKE_FLOOR_LINE,1,"       121111121 "
		CALL MAKE_FLOOR_LINE,2,"           1   1 "
		CALL MAKE_FLOOR_LINE,3," 11111 11121 7 1 "
		CALL MAKE_FLOOR_LINE,4," 2 1 2   1 1 2 1 "
		CALL MAKE_FLOOR_LINE,5," 6 1 1 121   111 "
		CALL MAKE_FLOOR_LINE,6,"   1     1       "
		CALL MAKE_FLOOR_LINE,7," 121111111       "
		CALL MAKE_FLOOR_LINE,8,"                 "

		;宝箱の設置
		CALL SET_TILE,7,1,던전플래그:2:3,0,3
		CALL SET_TILE,7,5,던전플래그:2:4,0,3
		CALL SET_TILE,5,5,던전플래그:2:5,0,3
		CALL SET_TILE,1,7,던전플래그:2:6,0,3
		CALL SET_TILE,7,3,던전플래그:2:7,0,3
	CASE 4
	;4階
		FLAG:최대X = 9
		FLAG:최대Y = 17
		CALL MAKE_FLOOR_LINE,0,"          "
		CALL MAKE_FLOOR_LINE,1," 11111    "
		CALL MAKE_FLOOR_LINE,2," 1 2 1    "
		CALL MAKE_FLOOR_LINE,3,"   1 1    "
		CALL MAKE_FLOOR_LINE,4," 7 1 1    "
		CALL MAKE_FLOOR_LINE,5," 2 1 111  "
		CALL MAKE_FLOOR_LINE,6," 1 1 2 2  "
		CALL MAKE_FLOOR_LINE,7," 121 1 1  "
		CALL MAKE_FLOOR_LINE,8,"     1    "
		CALL MAKE_FLOOR_LINE,9,"   11111  "
		CALL MAKE_FLOOR_LINE,10,"   1   1 "
		CALL MAKE_FLOOR_LINE,11,"   126 1 "
		CALL MAKE_FLOOR_LINE,12,"   1   1 "
		CALL MAKE_FLOOR_LINE,13,"   11111 "
		CALL MAKE_FLOOR_LINE,14,"         "
		
		;宝箱の設置
		CALL SET_TILE,1,2,던전플래그:2:8,0,3
	CASE 5
	;5階
		FLAG:최대X = 17
		FLAG:최대Y = 9
		CALL MAKE_FLOOR_LINE,0,"                 "
		CALL MAKE_FLOOR_LINE,1,"        11121111 "
		CALL MAKE_FLOOR_LINE,2,"        1   11   "
		CALL MAKE_FLOOR_LINE,3,"   111121 121121 "
		CALL MAKE_FLOOR_LINE,4,"     11     11   "
		CALL MAKE_FLOOR_LINE,5,"   721121 121111 "
		CALL MAKE_FLOOR_LINE,6,"     11   1      "
		CALL MAKE_FLOOR_LINE,7,"   11112111      "
		CALL MAKE_FLOOR_LINE,8,"                 "
		;宝箱の設置
		CALL SET_TILE,15,1,던전플래그:2:9,0,3
		CALL SET_TILE,8,5,던전플래그:2:10,0,3
		;イベントの設置
		CALL SET_TILE,15,3,던전플래그:2:11,0,4
ENDSELECT




;=======================================================================
;タイル定義
;=======================================================================
@DEFINE_TILES_2, ARGS, ARG, ARG:1
SELECTCASE ARGS
	CASE "m";人物
		RETURN 14
	CASE "U";↑
		RETURN 24
	CASE "d";↓	*D:はダークゾーン
		RETURN 34
	CASE "r";→	*Rは罠
		RETURN 44
	CASE "L";←
		RETURN 54
	CASE "w";水
		RETURN 10
	CASE "t";木(Tはターミナル）
		RETURN 20
ENDSELECT



;=======================================================================
;特殊タイル表示
;TILE_MARK_COMMON_{FLAG:현던전}_X
;=======================================================================
;ARG:1、ARG:2がX座標とY座標
;ARGはそこに代入されている値
;RESULTSに代入した文字がマップに表示されますが、必ず全角1文字分になるようにしてください。そうでないと表示が崩れます。
; は0
@TILE_MARK_COMMON_2_0,ARG,ARG:1,ARG:2
SELECTCASE ARG
	CASE 0
		RESULTS = ■
	CASE 10
		SETCOLOR 0, 0, 255
		RESULTS = ミ
	CASE 20
		SETCOLOR 0, 255, 0
		RESULTS = 木
	CASEELSE
		RETURN 1
ENDSELECT

@TILE_MARK_COMMON_2_2,ARG,ARG:1,ARG:2
RETURN 1

@TILE_MARK_COMMON_2_4, ARG, ARG:1, ARG:2
SELECTCASE ARG
	;メッセンジャーを緑色で"ｍ"と表示
	CASE 14
		SETCOLOR 0x00ff00
		RESULTS = ｍ
	;↑
	CASE 24
		RESULTS = ↑
	;↓
	CASE 34
		RESULTS = ↓
	;↓
	CASE 44
		RESULTS = →
	CASE 54
		RESULTS = ←
	CASEELSE
		RETURN 1
ENDSELECT


@TILE_MARK_COMMON_2_9,ARG,ARG:1,ARG:2
RETURN 1


;=======================================================================
;タイル調整
;=======================================================================
;ARG:1、ARG:2はそれぞれX座標とY座標
;ARGはその座標に現在代入されている番号
;0：壁　1：床もしくは通路　2：扉　3：宝箱　4：イベント　5：罠　6：上り階段 7：下り階段　8：出口　9：その他特殊処理等
;これらの内、3～9が代入されているマスに、個別の番号を与える処理を実行します。
;この処理を行った後、これらのマスには 「マップ番号*1000 + そのマスがそのマップで左上から数えて何個目のARGタイプのマスか*10 + ARG」が代入されます
;例えば 2003 であった場合、「2番のマップ＝３Ｆで、左上から数えて0個目の3＝宝箱である」という事を意味しています
;尚、0～2はどのマップにも大量に設置されるので、ここでは基本的に個別の番号を与えません。
;
;何個目のARGタイプのマスなのか、は左上の(0,0)から右まで探し、その後一つ下の段に移って同様に探す、というのを右下まで繰り返して数えます。
@MAKE_FLOOR_LINE_COMMON_2, ARG, ARG:1, ARG:2
#LOCALSIZE 10
;LOCAL:0～9 それぞれ何個目のARGなのかを記憶しています
;LOCAL:3 宝箱→使用フラグは던전플래그:70~74
;指定された座標が(0,0)である場合、つまり新しいマップを読み込んだ時はLOCALを消去します
SIF ARG:1 == 0 && ARG:2 == 0
	VARSET LOCAL
SELECTCASE ARG
	CASE 3
		;宝箱は多くの場合、開けたフラグが立っていると床を代入します
		;そのマップでどの宝箱を開けたかは、そのマップの宝箱管理用変数の何番目のビットが立っているかで判断します
		IF GETBIT(던전플래그:(FLAG:현던전):(FLAG:현M+70), LOCAL:3)
			DA:(ARG:1):(ARG:2) = 1
		ELSE
			DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:3 * 10 + 3
		ENDIF
		LOCAL:3++
	CASE 4 TO 9
		DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:ARG * 10 + ARG
		LOCAL:ARG++
	
ENDSELECT
;

;=======================================================================
;スタート地点入力
;=======================================================================
@START_DUNGEON_2,ARG
FLAG:현M = 0
FLAG:현X = 9
FLAG:현Y = 2
RETURN 0





;===========================================================================
;階段
;===========================================================================
;SELECTCASE DA:(FLAG:현X):(FLAG:현Y) /10
	;	;IDで分岐
	;	;１Ｆ上り階段
	;	CASE 0
	;			;@DUNGEON_UPSTAIRS_ID , 階段を進んだ先のマップ番号 , 移動先のタイルのID
	;			;２Ｆ＝マップ番号1番の0番目の下り階段 = 1 * 1000 + 0 * 10 + 7 = 1007へと飛ぶ
	;			CALL DUNGEON_UPSTAIRS_ID, 1 , 1007
	;	CASE 100
	;			CALL DUNGEON_UPSTAIRS_ID, 2 , 2007
	;	CASE 200
	;			CALL DUNGEON_UPSTAIRS_ID, 3 , 3007
	;	CASE 300
	;			CALL DUNGEON_UPSTAIRS_ID, 4 , 4007
	;	CASEELSE
	;ENDSELECT
	
	;入り組んだダンジョンで階段がたくさん入り乱れている状態であれば、上記のように階段毎に指定してあげる必要があります。
@UPSTAIRS_2_0
SELECTCASE FLAG:현M
	CASE 0
		SIF FLAG:현X == 4 && FLAG:현Y == 3
			CALL DUNGEON_UPSTAIRS,1,7,13
	CASE 1
		SIF FLAG:현X == 3 && FLAG:현Y == 5
			CALL DUNGEON_UPSTAIRS,2,3,13
	CASE 2
		SIF FLAG:현X == 5 && FLAG:현Y == 3
			CALL DUNGEON_UPSTAIRS,3,13,3
	CASE 3
		SIF FLAG:현X == 1 && FLAG:현Y == 5
			CALL DUNGEON_UPSTAIRS,4,1,4
	CASE 4
		SIF FLAG:현X == 5 && FLAG:현Y == 11
			CALL DUNGEON_UPSTAIRS,5,3,5

	CASEELSE
ENDSELECT
RETURN 1

@DOWNSTAIRS_2_0
SELECTCASE FLAG:현M
	CASE 1
		SIF FLAG:현X == 7 && FLAG:현Y == 13
			CALL DUNGEON_DOWNSTAIRS,0,4,3
	CASE 2
		SIF FLAG:현X == 3 && FLAG:현Y == 13
			CALL DUNGEON_DOWNSTAIRS,1,3,5
	CASE 3
		SIF FLAG:현X == 13 && FLAG:현Y == 3
			CALL DUNGEON_DOWNSTAIRS,2,5,3
	CASE 4
		SIF FLAG:현X == 1 && FLAG:현Y == 4
			CALL DUNGEON_DOWNSTAIRS,3,1,5
	CASE 5
		SIF FLAG:현X == 3 && FLAG:현Y == 5
			CALL DUNGEON_DOWNSTAIRS,4,5,11
	CASEELSE
ENDSELECT
RETURN 1


