
;=======================================================================
;에코빌딩
;ボス・도우만
;던전ナンバー1　ＭＡＰ0~2
;フラグ
;던전플래그:1:1  クリアフラグ
;던전플래그:1:10 最初の다크서머너との회화フラグ
;던전플래그:1:11 도우만撃破フラグ
;던전플래그:1:12 ターミナル해방フラグ
;던전플래그:1:13 エレベータのドア해방用変数(ビット演算)
;던전플래그:1:14 ４Ｆの다크서머너との회화フラグ
;던전플래그:1:70 １Ｆの宝箱管理用変数（ビット演算）
;던전플래그:1:71 ２Ｆの宝箱管理用変数（ビット演算）
;던전플래그:1:72 ３Ｆの宝箱管理用変数（ビット演算）
;던전플래그:1:73 ４Ｆの宝箱管理用変数（ビット演算）
;던전플래그:1:74 ５Ｆの宝箱管理用変数（ビット演算）
;=======================================================================

;=======================================================================
;攻略조건
;=======================================================================
@PREREQUISITE_DUNGEON_1
;特になし
RETURN 1



;=======================================================================
;던전名
;=======================================================================
@GET_DUNGEON_NAME_1
RESULTS = 에코빌딩


;=======================================================================
;플로어名표시
;=======================================================================
@FLOORNAME_1
PRINT 에코빌딩
SELECTCASE FLAG:현M
	CASE 0
		PRINTL １Ｆ
	CASE 1
		PRINTL ２Ｆ
	CASE 2
		PRINTL ３Ｆ
	CASE 3
		PRINTL ４Ｆ
	CASE 4
		PRINTL ５Ｆ
	CASEELSE
		PRINTL
ENDSELECT

;=======================================================================
;스타ト地点입력
;=======================================================================
@START_DUNGEON_1,ARG
FLAG:현M = 0
FLAG:현X = 5
FLAG:현Y = 7
;CALL AUTOMAP

;=======================================================================
;攻略開始時の이벤트
;=======================================================================
@EVENT_DUNGEON_START_1
;１Ｆのエレベーターの扉を開けておく
SETBIT 던전플래그:(FLAG:현던전):13 , 0


;=======================================================================
;탈출時の이벤트
;=======================================================================
@EVENT_DUNGEON_END_1
;던전탈출時、クリアフラグが立っておらず、도우만を撃破済みならクリアフラグを立てて賞金と名声を得ます。
;また、同時にターミナルに立ち寄った事にしておきます
IF !던전플래그:1:1 && 던전플래그:1:11
	CALL SHOW_PICTURE, "D"
	CALL MESSAGE_WINDOW_D, "", @"＞수배자・초인 도우만을 토벌해、계좌에 ￥25000 입금되고、명성 20을 얻었다%\@던전플래그:1:12?#/＞터미널이 개방되어、봉쇄되었던 신주쿠위생병원에 갈 수 있게 되었다\@%"
	MONEY += 25000
	FLAG:명성 += 20
	던전플래그:1:1 = 1
	던전플래그:1:12 = 1
ENDIF
;=======================================================================
;指定したマスに進入가능か
;=======================================================================
@CAN_ENTER_1,ARG,ARG:1
;ARG、ARG:1はそれぞれ대상のマスのX、Y座標を表しています。
;この던전ではエレベーターの扉が一度右側から開けておかないと左側からは開けられない、という処理に사용しています。
;どのマップでも座標(2,7)がエレベータの扉。던전플래그:1:13 ＝ エレベータフラグ管理用変数の{現在のマップ번호}番눈のビットが立っていなければ開けられるかどうかの판정を行う
IF ARG == 2 && ARG:1 == 7 && !GETBIT(던전플래그:(FLAG:현던전):13 , FLAG:현M) 
	;西からは開けられない
	IF FLAG:현X < ARG
		CALL MESSAGE_WINDOW_D, "", "＞문은 닫혀있다/＞일단 반대편에서 열어야 할 것같다"
		RETURN 0
	ELSE
		CALL MESSAGE_WINDOW_D, "", "＞닫혀있던 문을 열었다"
		SETBIT 던전플래그:(FLAG:현던전):13 , FLAG:현M
		;ここでそのまま下の処理に移って通させてもいいのですが、個人的にここで一度切ってもう一度입력させてからエレベーターに乗せた方がなんとなく良かったので
		RETURN 0
	ENDIF
ENDIF
CALL CAN_ENTER,ARG,ARG:1
RETURN RESULT

;=======================================================================
;플로어데이터
;=======================================================================
@MAKE_FLOOR_1
SELECTCASE FLAG:현M
	CASE 0
	;１階
		FLAG:최대X = 9
		FLAG:최대Y = 9

;X座標をこんな形でふっとくと、見やすいかもしれません
;								      ↓
;								           1         2
;								 012345678901234567890
		CALL MAKE_FLOOR_LINE,0, "         "
		CALL MAKE_FLOOR_LINE,1, " 3211111 "
		CALL MAKE_FLOOR_LINE,2, "   1   1 "
		CALL MAKE_FLOOR_LINE,3, " 41426 1 "
		CALL MAKE_FLOOR_LINE,4, "   1   1 "
		CALL MAKE_FLOOR_LINE,5, " 3211111 "
		CALL MAKE_FLOOR_LINE,6, "   1 2 1 "
		CALL MAKE_FLOOR_LINE,7, " E21 8 1 "
		CALL MAKE_FLOOR_LINE,8, "         "
		;左下、座標(1,7)の"E"はエレベーターを表しています。
		;このように数字の代わりにEを記述した場合、「-29」が代入されて共通のエレベーター이벤트が設置されている物と扱われます。
		;詳しくはSET_DUNGEON.ERB内の@DEFINE_TILESとSYSTEM_DUNGEON.ERB内の@DUNGEON_ATTACKをお読みください
		
		
		
	CASE 1
	;２階
		FLAG:최대X = 9
		FLAG:최대Y = 9
;								 012345678
		CALL MAKE_FLOOR_LINE,0, "         "
		CALL MAKE_FLOOR_LINE,1, " 123 624 "
		CALL MAKE_FLOOR_LINE,2, " 1     1 "
		CALL MAKE_FLOOR_LINE,3, " 123 721 "
		CALL MAKE_FLOOR_LINE,4, " 1     1 "
		CALL MAKE_FLOOR_LINE,5, " 1111124 "
		CALL MAKE_FLOOR_LINE,6, "       1 "
		CALL MAKE_FLOOR_LINE,7, " E211411 "
		CALL MAKE_FLOOR_LINE,8, "         "
		
	CASE 2
	;３階
		FLAG:최대X = 9
		FLAG:최대Y = 9
;								 012345678
		CALL MAKE_FLOOR_LINE,0, "         "
		CALL MAKE_FLOOR_LINE,1, " 32127 1 "
		CALL MAKE_FLOOR_LINE,2, "   1   1 "
		CALL MAKE_FLOOR_LINE,3, " 3 126 1 "
		CALL MAKE_FLOOR_LINE,4, " 2 1   1 "
		CALL MAKE_FLOOR_LINE,5, " 1111121 "
		CALL MAKE_FLOOR_LINE,6, "       1 "
		CALL MAKE_FLOOR_LINE,7, " E211111 "
		CALL MAKE_FLOOR_LINE,8, "         "
	CASE 3
	;４階
		FLAG:최대X = 9
		FLAG:최대Y = 9
;								 012345678
		CALL MAKE_FLOOR_LINE,0, "         "
		CALL MAKE_FLOOR_LINE,1, " 321 621 "
		CALL MAKE_FLOOR_LINE,2, "   1   4 "
		CALL MAKE_FLOOR_LINE,3, " 321 721 "
		CALL MAKE_FLOOR_LINE,4, "   1   1 "
		CALL MAKE_FLOOR_LINE,5, " 3211121 "
		CALL MAKE_FLOOR_LINE,6, "       1 "
		CALL MAKE_FLOOR_LINE,7, " E211111 "
		CALL MAKE_FLOOR_LINE,8, "         "
		
		
		
		
	CASE 4
	;５階
		FLAG:최대X = 9
		FLAG:최대Y = 9
;								 012345678
		CALL MAKE_FLOOR_LINE,0, "         "
		CALL MAKE_FLOOR_LINE,1, " 3 127 T "
		CALL MAKE_FLOOR_LINE,2, " 2 1   2 "
		CALL MAKE_FLOOR_LINE,3, " 1 111 1 "
		CALL MAKE_FLOOR_LINE,4, " 1   1 1 "
		CALL MAKE_FLOOR_LINE,5, " 111 1 1 "
		CALL MAKE_FLOOR_LINE,6, "   1 2 1 "
		CALL MAKE_FLOOR_LINE,7, " E211111 "
		CALL MAKE_FLOOR_LINE,8, "         "
		;※座標(7,1)の"T"はターミナルを表しています。
		;このように数字の代わりにTを記述した場合、「-9」が代入されて共通のターミナ루이ベントが設置されている物と扱われます。
		;詳しくはSET_DUNGEON.ERB内の@DEFINE_TILESとSYSTEM_DUNGEON.ERB内の@DUNGEON_ATTACKをお読みください
		
		;도우만撃破後にターミナルを訪れてないとターミナル訪問用の이벤트を設置します
		CALL SET_TILE, 7 , 1 , 던전플래그:1:12 , 0 , 4009
		
		
		;이벤트の設置
		;１Ｆの노커（스킬카드の持ち主）同様、特定の조건を満たしている場合の이벤트として、
		;ボス악마である도우만を設置します。
		;@SET_TILE,X座標, Y座標, 사용するフラグ, フラグがいくつのときにタイルを設置するか, 設置するタイル
		;つまり、これはX座標7、Y座標1の位置に、던전플래그:1:11(도우만撃破フラグ)が0のときのみ、IDが400番の、4（이벤트）を置く
		;この4004は マップ번호である4*1000 + タイルの종류を表す4で構成されています。
		CALL SET_TILE, 7 , 1 , 던전플래그:1:11 , 0 , 4004
		
		;なお、던전플래그:1:11は던전플래그:{FLAG:현던전}:11や、던전플래그:[[던전:에코빌딩]]:11という記述もできます
		;기본的には前者권장、던전の外やほかの던전からフラグを見たいときは後者もいいでしょう
	CASEELSE





ENDSELECT
;参考例:半角スペース（壁）は0でも記述가능,見やすさの好みで0と使い分ける
;		CALL MAKE_FLOOR_LINE,0, "000000000"
;		CALL MAKE_FLOOR_LINE,1, "032111110"
;		CALL MAKE_FLOOR_LINE,2, "000100010"
;		CALL MAKE_FLOOR_LINE,3, "041426010"
;		CALL MAKE_FLOOR_LINE,4, "000100010"
;		CALL MAKE_FLOOR_LINE,5, "032111110"
;		CALL MAKE_FLOOR_LINE,6, "000102010"
;		CALL MAKE_FLOOR_LINE,7, "0E2108010"
;		CALL MAKE_FLOOR_LINE,8, "000000000"

;=======================================================================
;タイル調整
;=======================================================================
;ARG:1、ARG:2はそれぞれX座標とY座標
;ARGはその座標に現在代入されている번호
;0：壁　1：床또는通路　2：扉　3：宝箱　4：이벤트　5：罠　6：上り階段 7：下り階段　8：出口　9：그외特殊処理等
;これらの内、3～9が代入されているマスに、個別の번호を与える処理を実行します。
;この処理を行った後、これらのマスには 「マップ번호*1000 + そのマスがそのマップで左上から数えて何個눈のARG타입のマスか*10 + ARG」が代入されます
;例えば 2003 であった場合、「2番のマップ＝３Ｆで、左上から数えて0個눈の3＝宝箱である」という事を意味しています
;尚、0～2はどのマップにも大量に設置されるので、ここでは기본的に個別の번호を与えません。
;
;何個눈のARG타입のマスなのか、は左上の(0,0)から右まで探し、その後一つ下の段に移って同様に探す、というのを右下まで繰り返して数えます。
@MAKE_FLOOR_LINE_COMMON_1, ARG, ARG:1, ARG:2
#LOCALSIZE 10
;LOCAL:0～9 それぞれ何個눈のARGなのかを記憶しています
;LOCAL:3 宝箱→사용フラグは던전플래그:70~74
;指定された座標が(0,0)である場合、つまり新しいマップを読み込んだ時はLOCALを소거します
SIF ARG:1 == 0 && ARG:2 == 0
	VARSET LOCAL
SELECTCASE ARG
	CASE 3
		;宝箱は多くの場合、開けたフラグが立っていると床を代入します
		;そのマップでどの宝箱を開けたかは、そのマップの宝箱管理用変数の何番눈のビットが立っているかで判断します
		IF GETBIT(던전플래그:(FLAG:현던전):(FLAG:현M+70), LOCAL:3)
			DA:(ARG:1):(ARG:2) = 1
			;特殊処理
			;１Ｆ1番눈の宝箱を取ると、そこには0024を代入(노커)
			SIF FLAG:현M == 0 && LOCAL:3 == 1
				DA:(ARG:1):(ARG:2) = 24
				
		ELSE
			DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:3 * 10 + 3
		ENDIF
		LOCAL:3++
	CASE 4 TO 9
		DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:ARG * 10 + ARG
		LOCAL:ARG++
	
ENDSELECT


;=======================================================================
;特殊タイル표시
;TILE_MARK_COMMON_{FLAG:현던전}_X
;=======================================================================
;ARG:1、ARG:2がX座標とY座標
;ARGはそこに代入されている値
;RESULTSに代入した문자がマップに표시されますが、必ず全角1문자分になるようにしてください。そうでないと표시が崩れます。

;이벤트タイル特殊표시
;末꼬리の_4は이벤트であることを示す4
@TILE_MARK_COMMON_1_4, ARG , ARG:1 , ARG:2
SELECTCASE ARG / 10
	;メッセンジャーを緑色で"ｍ"と표시
	CASE 0 TO 2 , 100 , 101 , 102 , 300
		SETCOLOR 0x00ff00
		RESULTS = ｍ
	CASEELSE
		;特に설정しない場合、"！"と표시されます
		RETURN 1
ENDSELECT

;特殊タイルの표시
;末꼬리の_9は特殊タイルであることを示す9
@TILE_MARK_COMMON_1_9, ARG , ARG:1 , ARG:2
SELECTCASE ARG / 10
	;５Ｆに設置されたターミナル
	CASE 400
		RESULTS = Ｔ
	CASEELSE
		;特に설정しない場合、"■"が표시されます
		RETURN 1
ENDSELECT

;=======================================================================
;[5]조사　実行時の이벤트
;=======================================================================
@EVENT_CHECK_DUNGEON_1

;==========
;出口の処理
;==========
IF DA:(FLAG:현X):(FLAG:현Y) == 8
	CALL DUNGEON_EXIT
	RETURN 1
;========
;宝の処理
;========
;% 10は10で割ったあまり、つまり下一桁がでてきます
;그리고、下一桁はタイルの종류を表す
ELSEIF DA:(FLAG:현X):(FLAG:현Y) % 10 == 3
	CALL TREASURE_1
	RETURN RESULT
;=======
;階段
;=======
ELSEIF DA:(FLAG:현X):(FLAG:현Y) % 10 == 6
	CALL UPSTAIRS_1
	RETURN RESULT

ELSEIF DA:(FLAG:현X):(FLAG:현Y) % 10 == 7
	CALL DOWNSTAIRS_1
	RETURN RESULT
;========
;이벤트
;========
ELSEIF DA:(FLAG:현X):(FLAG:현Y) % 10 == 4
	SELECTCASE DA:(FLAG:현X):(FLAG:현Y) / 10
		;１Ｆ이벤트
		CASE 0
			CALL MESSAGE_WINDOW_D, "요정 픽시", "저기저기 아줌마/최근 서머너가 자주 보이네 "
			CALL MESSAGE_WINDOW_D, "요마 아프사라스", "그러네. TALK로 교섭을 걸어서, 동료마를 모으고 있는 것 같아/하지만 너는 아직 어리니까, 말을 걸어도 따라가면 안돼/그리고 나는 언니야"
			CALL MESSAGE_WINDOW_D, "요정 픽시", "지금은 ＣＯＭＰ이라는 기계로 우리들을 소환할 수 있다는데!/과학의 힘이란거 굉장해! 그치? 아줌마!"
			CALL MESSAGE_WINDOW_D, "요마 아프사라스", "그래? 기계같은 건 잘 모르니까 말이지./그리고 나는 언니야."
		CASE 1
			CALL MESSAGE_WINDOW_D, "풋내기 다크서머너", "현상 수배된 악마가 있다 라고 들어 여기까지 왔지만/TALK로 악마를 동료마로 만들어도、ＭＡＧ가 부족해서 불러낼 수가 없고……/따르고 있던 동료마들도 ＭＡＧ가 부족해서 쓰러졌으니, 엎친데 덮친 격이야"
			
		CASE 2
			CALL MESSAGE_WINDOW_D, "요정 노커", "이봐 너/이 근처에 뒀던 나의 스킬카드 못 봤냐?/그거랑 ＭＡＧ가 있으면 [122]동료마강화에서/새로운 스킬을 배울 수 있을 텐데……/젠장！ 훔친 자식 보이기만 해봐라!"
		;２Ｆ이벤트
		CASE 100
			CALL MESSAGE_WINDOW_D, "다크 서머너", "너、ＤＥＶＩＬ－ＣＯＯＰ는 이용하고 있어？/약점만 찌르면, 동료마와 협력해서 추격할 수 있어/하지만、속성……사상이 다른 동료마는 협력해주지 않으니까。/조심하라구"
		CASE 101
			CALL MESSAGE_WINDOW_D, "요조 하피", "우우우、픽시는 저렇게나 귀여운데 정말 무서워…/지오 같은 전격은 데미지 뿐만 아니라 SHOCK로 움직일 수 없게 되어 버려/SHOCK상태가 되면 물리공격은 반드시 크리티컬이 되고、부흐 같은 빙결공격은 2배의 데미지고…"
			CALL MESSAGE_WINDOW_D, "요조 하피", "…그렇다면 부흐 같은 걸로 FREEZE 상태가 되어도 같은 효과인건가/나같이 전격에 약한 자는 GUARD해서 흘려버리지 않으면。/이라니、아무도 듣고있지 않은거지？"
		CASE 102
			CALL MESSAGE_WINDOW_D, "다크서머너", "이 지역의 악마가 합성에 사용되는 소재를 가지고 있는 것 같아/마카 복권으로 맞춘 합성 가이드북에 그렇게 써있었구만/이 지역의 소재를 모으면、헤드셋을 합성할 수 있을 거다"
		;４Ｆ이벤트
		CASE 300
			;도우만撃破済み
			IF 던전플래그:(FLAG:현던전):11
				CALL MESSAGE_WINDOW_D, "다크서머너", "뭐라고！？/현상수배범을 잡아버렸다고！？"
				CALL MESSAGE_WINDOW_D, "다크서머너", "제엔장、부릴 악마를 좀 더 모았으면 상금은 내꺼였을텐데！"
			;一度話しかけた事がある
			ELSEIF 던전플래그:(FLAG:현던전):12
				CALL MESSAGE_WINDOW_D, "다크서머너", "화염공격을 막는 물의 벽……/그것을 사용할 악마를 합체로 만들 수 밖에 없나……"
			ELSE
				CALL MESSAGE_WINDOW_D, "다크서머너", "치잇……멍청한 짓을 했군/설마하니 내 좀비들이 한꺼번에 불탈 줄은…"
				CALL MESSAGE_WINDOW_D, "다크서머너", "……이 앞에 갈 생각인가？ 그만둬/이 윗층에는 현상금이 걸린 악마가 있지만/어중간한 실력으로는 그놈의 불꽃에 죄다 불타버리기 십상이야"
				던전플래그:(FLAG:현던전):12 = 1
			ENDIF
	ENDSELECT
ELSE
	CALL MESSAGE_WINDOW_D, "", "＞아무것도 없는 것 같다"
	RETURN 0
ENDIF

;=======================================================================
;タイル進入時の이벤트
;=======================================================================
@EVENT_ENTER_DUNGEON_1,ARG
;ARG = 進入時の向き　0の場合ワープなど
;==========
;出口の処理
;==========
IF DA:(FLAG:현X):(FLAG:현Y) % 10 == 8
	CALL DUNGEON_EXIT
	RETURN 1
;========
;宝の処理
;========
ELSEIF DA:(FLAG:현X):(FLAG:현Y) % 10 == 3
	CALL TREASURE_1
	RETURN RESULT
;=======
;階段
;=======
ELSEIF DA:(FLAG:현X):(FLAG:현Y) % 10 == 6
	CALL UPSTAIRS_1
	RETURN RESULT

ELSEIF DA:(FLAG:현X):(FLAG:현Y) % 10 == 7
	CALL DOWNSTAIRS_1
	RETURN RESULT

;==========
;扉の処理
;==========
ELSEIF DA:(FLAG:현X):(FLAG:현Y) % 10 == 2
	CALL DUNGEON_DOOR,ARG
	RETURN 1


;========================
;이벤트
;========================
ELSEIF DA:(FLAG:현X):(FLAG:현Y) % 10 == 4
	SELECTCASE DA:(FLAG:현X):(FLAG:현Y) /10
		;１Ｆ이벤트
		CASE 1
			IF 던전플래그:1:10 == 0
				CALL MESSAGE_WINDOW_D, "풋내기 다크서머너", "현상금 걸린 악마가 있다고 해서 여기 왔지만/TALK로 악마를 동료마로 했더니、ＭＡＧ가 부족해서 소환할 수 없어……/데려온 악마도 ＭＡＧ가 부족해서 쓰러져버렸고、엎친데 덮친 격이야/……그래그래、나의 이야기를 한번 더 듣고싶다면 [5]조사하기 야"
				던전플래그:1:10 = 1
				RETURN 1
			ENDIF
			RETURN 0
		;５Ｆ
		CASE 400
			;現在地をターミナルに
			DA:(FLAG:현X):(FLAG:현Y) = 4009
			CALL SHOW_PICTURE, "D"
			CALL MESSAGE_WINDOW_D, "", "수상한 방에, 수상한 남자가 무언가 의식을 하고 있는 듯 하다"
			CALL MESSAGE_WINDOW_D, "남자", "우리 동포여, 지금 이 순간 마계로부터 오라！"
			CALL MESSAGE_WINDOW_D, "남자", "……음！？/수상한 녀석、뭐하는 놈인지는 모르지만 의식의 방해를 할 작정이냐！/하지만 이 방에서 싸울 수는 없는 노릇이니까、우선은 밖으로 나가자"
			CALL SHOW_FORCEMOVE("D<2>", "D", "", , @"＞%CALLNAME:MASTER%들은 보이지 않는 힘에 의해 방 밖으로 튕겨나갔다！")
			CALL MESSAGE_WINDOW_D, "남자", "이걸로 좋다、마음껏 싸울 수 있어/악마술사여、이 아시야 도우만과 만난 불행을 저주해라！"
			CALL MESSAGE_WINDOW_D, "", "/＞초인 도우만이 １체 나타났다！/" , , , , , , , , , "CENTER"
			FLAG:도주불가플래그 = 1
			FLAG:회화불능플래그 = 1
			FLAG:선제기습취소 = 1
			CALL SET_ENEMY,9,[[キャラ:도우만]],10,0,1
			CFLAG:(CHARANUM-1):행동횟수 = 2
			CFLAG:(CHARANUM-1):ＨＰ보정 += 500
			ABL:(CHARANUM-1):아이템1 = 10704
			ABL:(CHARANUM-1):입수확률1 = 100
			ABL:(CHARANUM-1):아이템2 = 10901
			ABL:(CHARANUM-1):입수확률2 = 100
			ABL:(CHARANUM-1):아이템3 = 275
			ABL:(CHARANUM-1):입수확률3 = 100
			
			CALL SYNC_STATUS,(CHARANUM-1)
			CALL HEALTH_CHARA,(CHARANUM-1)		
			CALL BATTLE_START
			FLAG:도주불가플래그 = 0
			FLAG:회화불능플래그 = 0
			FLAG:선제기습취소 = 0
			CALL SHOW_PICTURE, "D"
			CALL MESSAGE_WINDOW_D, "", "/＞초인 도우만은 힘이 다했다/" , , , , , , , , , "CENTER"
			던전플래그:1:11 = 1
			RETURN 1
	ENDSELECT
ELSEIF DA:(FLAG:현X):(FLAG:현Y) %10 == 9
	SELECTCASE DA:(FLAG:현X):(FLAG:현Y) /10
		CASE 400
			IF 던전플래그:1:11 && !던전플래그:1:12
				CALL MESSAGE_WINDOW_D, "", "＞터미널을 개방해서、봉쇄되었던 신주쿠 위생병원에 갈 수 있게 되었다"
				던전플래그:1:12 = 1
				DA:(FLAG:현X):(FLAG:현Y) = -9
			ENDIF
			CALL DUNGEON_TERMINAL
			RETURN 1
	ENDSELECT
ENDIF
RETURN 0





;=======================================================================
;인카운트율
;=======================================================================
@ENCOUNT_RATE_1
SELECTCASE FLAG:현M
	CASE 0 , 1
		FLAG:인카운트율 = FLAG:미조우걸음수*5
	CASE 2 , 3
		FLAG:인카운트율 = FLAG:미조우걸음수*5
	CASE 4
		FLAG:인카운트율 = FLAG:미조우걸음수*5
	CASEELSE
		FLAG:인카운트율 = FLAG:미조우걸음수*5
ENDSELECT
SIF FLAG:미조우걸음수 < 5
	FLAG:인카운트율 = 0
;=======================================================================
;필요레벨눈安
;권장LV 雑魚최저LV 雑魚最高LV ボスLV 
;=======================================================================
@GET_DUNGEON_LV_1
RETURN 5, 3, 9, 10
;=======================================================================
;エンカウント処理
;=======================================================================
@CHECK_ENCOUNT_1
IF RAND:100 < FLAG:인카운트율
	CALL ENEMY_TABLE
	IF RAND:3 == 1
		ABL:(CHARANUM-1):아이템2 = 1415
		ABL:(CHARANUM-1):입수확률2 = 8
	ELSEIF RAND:2 == 1
		ABL:(CHARANUM-1):아이템2 = 1416
		ABL:(CHARANUM-1):입수확률2 = 8
	ELSE
		ABL:(CHARANUM-1):아이템2 = 1417
		ABL:(CHARANUM-1):입수확률2 = 8
	ENDIF
	
	RETURN 1
ELSE
	FLAG:미조우걸음수 += 1
	RETURN 0
ENDIF
;=======================================================================
;적の종족の종류数
;RETURN X でXが종류の数になります
;あまりいろんなのが混ざっているとCOOPがとりにくくなったり
;적の공격속성が多くなる傾向にあるので、
;종류の数は1・2종류を主体に時々3종류くらいを기본にするのが望ましいと思われます
;=======================================================================
@CLASS_NUM_1
SELECTCASE FLAG:현M
	CASE 0 , 1
		SELECTCASE RAND:100
			CASE IS < 50
				RETURN 1
			CASEELSE
				RETURN 2
		ENDSELECT
	CASE 2 , 3
		SELECTCASE RAND:100
			CASE IS < 50
				RETURN 1
			CASEELSE
				RETURN 2
		ENDSELECT
	CASE 4
		SELECTCASE RAND:100
			CASE IS < 35
				RETURN 1
			CASEELSE
				RETURN 2
		ENDSELECT
ENDSELECT

;=======================================================================
;적の総数
;ARGは出現する적の종류です
;RAND(X, Y)はX～Y-1のうち중 하나になるRANDです
;なお、ここで帰った数字は下限を종족数、上限を10として自動的に調整されます
;
;에코빌딩は最初の던전ということで少なめで、최대でも6体ということに
;=======================================================================
@ENEMY_NUM_1, ARG
SELECTCASE FLAG:현M
	CASE 0 , 1
		;1~2あるいは2~4
		RETURN RAND(ARG, ARG*2+1)
	CASE 1 , 2
		;1~3あるいは2~5
		RETURN RAND(ARG, ARG*2+2)
	CASE 4
		;1~4あるいは2~6
		RETURN RAND(ARG, ARG*2+3)
ENDSELECT
;=======================================================================
;적の종류
;=======================================================================
@ENEMY_1, ARG
SELECTCASE FLAG:현M
	CASE 0 , 1
		SELECTCASE RAND:100
			CASE IS < 20
				;20%で픽시
				;RETURN [登場악마のキャラ번호], LV　となっています
				RETURN 501, 3
				;参考例　以下の記述でも動きます。数字を指定するのと문자열を指定するのは好みでどうぞ
				;なお、문자열指定は予め、_Rename.csvで등록していないと無理です。ｃｓｖを見てみましょう
				;RETURN [[キャラ:픽시]],3
			CASE IS < 35
				;15%で하피
				RETURN [[キャラ:하피]],4
			CASE IS < 50
				;15%で좀비쨩
				RETURN [[キャラ:좀비쨩]],4
			CASE IS < 65
				;15%で아프사라스
				RETURN [[キャラ:아프사라스]],5
			CASE IS < 74
				;9%で노커
				RETURN [[キャラ:노커]],4
			CASE IS < 83
				;9%で좀비독
				RETURN 1083, 1
			CASE IS < 92
				;9%で춍춍
				RETURN [[キャラ:춍춍]],4
			CASE IS < 100
				;8%で아귀
				RETURN [[キャラ:아귀]],4
		ENDSELECT
	CASE 2 , 3
		SELECTCASE RAND:100
			CASE IS < 14
				;14%で픽시
				RETURN [[キャラ:픽시]],3
			CASE IS < 28
				;14%で하피
				RETURN [[キャラ:하피]],4
			CASE IS < 42
				;14%で좀비쨩
				RETURN [[キャラ:좀비쨩]],4
			CASE IS < 56
				;14%で아프사라스
				RETURN [[キャラ:아프사라스]],5
			CASE IS < 61
				;7%で픽시랭크１
				RETURN [[キャラ:픽시]],6
			CASE IS < 64
				;3%で하피랭크１
				RETURN [[キャラ:하피]],7
			CASE IS < 67
				;3%で좀비쨩랭크１
				RETURN [[キャラ:좀비쨩]],7
			CASE IS < 70
				;3%で노커랭크１
				RETURN [[キャラ:노커]],7
			CASE IS < 73
				;3%で아귀랭크１
				RETURN [[キャラ:아귀]],7
			CASE IS < 76
				;3%で춍춍랭크１
				RETURN [[キャラ:춍춍]],7
			CASE IS < 83
				;7%で코볼트
				RETURN [[キャラ:코볼트]],5
			CASE IS < 86
				;3%で좀비독
				RETURN 1083, 1
			CASE IS < 100
				;14%で화백
				RETURN [[キャラ:화백]],7
		ENDSELECT
	CASE 4
		SELECTCASE RAND:100
			CASE IS < 10
				;10%で픽시랭크１
				RETURN [[キャラ:픽시]],7
			CASE IS < 20
				;10%で하피랭크１
				RETURN [[キャラ:하피]],7
			CASE IS < 30
				;10%で좀비쨩랭크１
				RETURN [[キャラ:좀비쨩]],7
			CASE IS < 40
				;10%で아프사라스랭크1
				RETURN [[キャラ:아프사라스]],7
			CASE IS < 50
				;10%で픽시랭크２
				RETURN [[キャラ:픽시]],9
			CASE IS < 60
				;10%で춍춍랭크１
				RETURN [[キャラ:춍춍]],7
			CASE IS < 70
				;10%で노커랭크1
				RETURN [[キャラ:노커]],7
			CASE IS < 80
				;10%で좀비군
				RETURN [[キャラ:좀비군]],7
			CASE IS < 90
				;10%で코볼트
				RETURN [[キャラ:코볼트]],7
			CASE IS < 100
				;10%で화백
				RETURN [[キャラ:화백]],7
		ENDSELECT
ENDSELECT


;=======================================================================
;宝箱の中身
;=======================================================================
@TREASURE_1
#LOCALSIZE 3
;宝箱のフラグ管理用変数の번호
LOCAL = FLAG:현M + 70
;そのマップの何番눈の宝箱か
LOCAL:1 = (DA:(FLAG:현X):(FLAG:현Y) / 10) % 100

;/10はIDを10で割る。つまり、下一桁をなくして、二桁눈と三桁눈を二桁の数字として取り出している
SELECTCASE DA:(FLAG:현X):(FLAG:현Y) / 10
	;マップ번호*100+そのマップで何番눈の宝箱かを示す数値でどの宝箱かを判別します。
	;例えば0の場合、0版のマップの0番눈の宝箱であることを表しています。
	CASE 0
		;@GET_TREASURE,아이템번호 , 입수個数 , 던전ナンバー , 開けた時に操作する変数の번호 , 変数に立てるビット
		;[[아이템:외상약]]は_Rename.csvによって1001番が置換されて渡されます。これは외상약の아이템번호です。
		;そしてその個数が1個、던전ナンバーは宝箱あけるときはよその던전をあけることがないだろうのでFLAG:현던전が無難です
		;LOCALはこの場合マップ번호の0+70で70が代入されています。그리고、LOCAL:1にはこの宝箱がこのマップで何番눈の宝箱か、つまり0が入っています
		;このように記述すると、宝箱を開けた場合던전플래그:1(에코빌딩の번호):70 の0番눈のビットが立ちます。
		;MAPをつくるときにこの宝箱は던전플래그:1(에코빌딩):70の0番눈のビットが立っていない時しか置かないことになってるので、宝箱を開けるとこれで消えます
		CALL GET_TREASURE, [[아이템:외상약]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 1
		CALL GET_TREASURE, [[아이템:스킬카드【산바람】]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
		DA:(FLAG:현X):(FLAG:현Y) = 24
	;百の位が1になりました。
	;これで以下の二つの宝箱はマップ번호1＝에코빌딩２Ｆの0番눈、1番눈の宝箱という事になります
	CASE 100
		CALL GET_TREASURE, [[아이템:스킬카드【아쿠아】]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 101
		CALL GET_TREASURE, [[아이템:퀸뷰트]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 200
		;罠箱
		;@GET_TREASURE_TRAP , 罠の종류 , 데미지量or확률 , 相性번호 , 던전ナンバー , 開けた時に操作する変数の번호 , 変数に立てるビット
		;第一引数が"ＨＰ"か"ＭＰ"なら최대値に対する第二引数％の割合데미지を、
		;배드스테이터스名であれば第二引数％の확률로その배드스테이터스になります。この場合、第三引数の번호の相性に対する내성で확률が변화します
		;この箱は아군全員のHPを25%減らす罠です。
		CALL GET_TREASURE_TRAP, "ＨＰ", 25 , GET_TYPE_NUM("만능") , FLAG:현던전, LOCAL , LOCAL:1
		
	CASE 201
		;@MAGIC_BOX , 指定する월령 , 월령が正しい時の아이템、월령が正しくない時の아이템 , 입수個数 , 던전ナンバー , 開けた時に操作する変数の번호 , 変数に立てるビット
		;현재의월령によって手に入る아이템の変わる箱です。
		;この場合、월령8＝만월である場合に보옥が1個손に入り、そうでない場合마석1個が손に入ります
		
		CALL MAGIC_BOX , 8 , [[아이템:보옥]] , [[아이템:마석]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
		
	CASE 300
		CALL GET_TREASURE, [[아이템:스킬카드【그라이】]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 301
		;@GET_TREASURE_MONEY ,￥or마카 , 입수額 , 던전ナンバー , 開けた時に操作する変数の번호 , 変数に立てるビット
		;第一引数が0なら￥、1なら마카を입수します
		;この宝箱には￥1000が入っています
		CALL GET_TREASURE_MONEY, 0 , 1000 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 302
		;@GET_TREASURE_MAG ,  , 입수量 , 던전ナンバー , 開けた時に操作する変数の번호 , 変数に立てるビット
		;この宝箱には500MAGが入っています
		CALL GET_TREASURE_MAG, , 500 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 400
		CALL GET_TREASURE, [[아이템:갖지못한자의반지]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
		
;	CASE 3
;		CALL GET_TREASURE,5000,2,FLAG:현던전,3
	;なお、1001は[[아이템:외상약]]という記述も가능です
ENDSELECT
RETURN 1

;=======================================================================
;階段置き場
;=======================================================================
;上り階段処理
@UPSTAIRS_1
;SELECTCASE DA:(FLAG:현X):(FLAG:현Y) /10
;	;IDで分岐
;	;１Ｆ上り階段
;	CASE 0
;			;@DUNGEON_UPSTAIRS_ID , 階段を進んだ先のマップ번호 , 移動先のタイルのID
;			;２Ｆ＝マップ번호1番の0番눈の下り階段 = 1 * 1000 + 0 * 10 + 7 = 1007へと飛ぶ
;			CALL DUNGEON_UPSTAIRS_ID, 1 , 1007
;	CASE 100
;			CALL DUNGEON_UPSTAIRS_ID, 2 , 2007
;	CASE 200
;			CALL DUNGEON_UPSTAIRS_ID, 3 , 3007
;	CASE 300
;			CALL DUNGEON_UPSTAIRS_ID, 4 , 4007
;	CASEELSE
;ENDSELECT

;入り組んだ던전で階段がたくさん入り乱れている상태であれば、上記のように階段毎に指定してあげる필요があります。
;しかしこの에코빌딩は1つのマップに上り階段が１つ、下り階段が１つ、上の階に進む＝マップ번호が一つ増えるという구조になっています
;なので、下記のように書けば一行で済みます
CALL DUNGEON_UPSTAIRS_ID, FLAG:현M+1 , (FLAG:현M + 1) * 1000 + 7
RETURN 1

;下り階段処理
@DOWNSTAIRS_1
;上り階段同様に、에코빌딩は下り階段も1行で記述できます
CALL DUNGEON_DOWNSTAIRS_ID, FLAG:현M-1 , (FLAG:현M - 1) * 1000 + 6
RETURN 1

;=======================================================================
;エレベーター定義
;=======================================================================
;ARGはそのエレベーターのタイル
@DUNGEON_ELEVATOR_1, ARG
;RESULT:1～5にエレベータが存在するマップの번호を代入し、RESULTS:1～5には표시したい명칭を代入、RETURNでは-1を返しておく
RESULT:1 = 0
RESULT:2 = 1
RESULT:3 = 2
RESULT:4 = 3
RESULT:5 = 4
RESULTS:1 = １Ｆ
RESULTS:2 = ２Ｆ
RESULTS:3 = ３Ｆ
RESULTS:4 = ４Ｆ
RESULTS:5 = ５Ｆ
RETURN -1

;=======================================================================
;윤간참가악마
;=======================================================================
@DUNGEON_RAPE_DEVIL_1
;랜덤にどの악마が出るか決定
;RETURN CSV번호 , 人数 , 레벨
SELECTCASE RAND:3
	CASE 0
		RETURN [[キャラ:아귀]] , 3 + RAND:10 , CSVBASE([[キャラ:아귀]] , GETNUM(BASE , "LV") , 0) + RAND:3
	CASE 1
		RETURN [[キャラ:코볼트]] , 3 + RAND:10 , CSVBASE([[キャラ:코볼트]] , GETNUM(BASE , "LV") , 0) + RAND:3
	CASE 2
		RETURN [[キャラ:좀비군]] , 3 + RAND:10 , CSVBASE([[キャラ:좀비군]] , GETNUM(BASE , "LV") , 0) + RAND:3
ENDSELECT


