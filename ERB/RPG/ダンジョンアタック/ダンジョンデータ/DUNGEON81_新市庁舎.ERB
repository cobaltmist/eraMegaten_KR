
;=======================================================================
;
;=======================================================================

;=======================================================================
;攻略조건
;=======================================================================
@PREREQUISITE_DUNGEON_81
IF  던전플래그:84:0 == 1 & !던전플래그:81:0
	RETURN 1
ENDIF

;=======================================================================
;던전名
;=======================================================================
@GET_DUNGEON_NAME_81
RESULTS = 신 시청사

@FLOORNAME_81
PRINT 신 시청사
SELECTCASE FLAG:현M
	CASE 0
		PRINTL 1F
	CASE 1
		PRINTL 10F
	CASE 2
		PRINTL 15F
	CASE 3
		PRINTL 20F
	CASE 4
		PRINTL 25F
	CASE 5
		PRINTL 30F
	CASE 6
		PRINTL 35F
	CASE 7
		PRINTL 40F
	CASE 8
		PRINTL 45F
	CASE 9
		PRINTL 50F
	CASE 10
		PRINTL 55F
	CASE 11
		PRINTL 60F
ENDSELECT

;=======================================================================
;スタート地点입력
;=======================================================================
@START_DUNGEON_81, ARG
FLAG:현M = 0
FLAG:현X = 6
FLAG:현Y =11
RETURN 0

;=======================================================================
;スタート時이벤트
;=======================================================================
@EVENT_DUNGEON_START_81
IF 던전플래그:81:1 == 0
	CALL SHOW_PICTURE, "NONFLOORD"
	CALL MESSAGE_WINDOW_D, "", @"＞계획을 탈취하려던 일련의 배신자들의 두목인 전 대간부의 처리 명령이 떨어졌다"
	던전플래그:81:1 = 1
ENDIF


;=======================================================================
;指定したマスに進入可能か
;=======================================================================
@CAN_ENTER_81, ARG, ARG:1
IF 던전플래그:81:1 == 2
	SELECTCASE DA:ARG:(ARG:1)
		CASE 12
			;↑
			IF FLAG:현M == 7
				IF ARG:1 > FLAG:현Y
					CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
					CALL MESSAGE_WINDOW_D, "", "＞扉は閉ざされている。"
					RETURN 0
				ENDIF
			ELSE
				IF ARG:1 < FLAG:현Y
					CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
					CALL MESSAGE_WINDOW_D, "", "＞市長から受け取った鍵でドアが開いた。"
					RETURN 1
				ENDIF
			ENDIF
		CASE 22
			;↓
			IF ARG:1 < FLAG:현Y
				CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
				CALL MESSAGE_WINDOW_D, "", "＞市長から受け取った鍵でドアが開いた。"
				RETURN 1
			ENDIF

		CASE 32
			;←
			IF ARG > FLAG:현X
				CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
				CALL MESSAGE_WINDOW_D, "", "＞市長から受け取った鍵でドアが開いた。"
				RETURN 1
			ENDIF

		CASE 42
			;→
			IF ARG < FLAG:현X
				CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
				CALL MESSAGE_WINDOW_D, "", "＞市長から受け取った鍵でドアが開いた。"
				RETURN 1
			ENDIF

		CASE 52
			CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
			CALL MESSAGE_WINDOW_D, "", "＞市長から受け取った鍵でドアが開いた。"
			RETURN 1
		CASEELSE
	ENDSELECT
ELSE
	SELECTCASE DA:ARG:(ARG:1)
		CASE 12
			;↑
			IF ARG:1 > FLAG:현Y
				CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
				CALL MESSAGE_WINDOW_D, "", "＞扉は閉ざされている。"
				RETURN 0
			ENDIF

		CASE 22
			;↓
			IF ARG:1 < FLAG:현Y
				CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
				CALL MESSAGE_WINDOW_D, "", "＞扉は閉ざされている。"
				RETURN 0
			ENDIF

		CASE 32
			;←
			IF ARG > FLAG:현X
				CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
				CALL MESSAGE_WINDOW_D, "", "＞扉は閉ざされている。"
				RETURN 0
			ENDIF

		CASE 42
			;→
			IF ARG < FLAG:현X
				CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
				CALL MESSAGE_WINDOW_D, "", "＞扉は閉ざされている。"
				RETURN 0
			ENDIF

		CASE 52
			IF 던전플래그:81:1 == 1
				CALL SET_FLOOR_ANALYZE(2, FLAG:현던전, FLAG:현M, ARG, ARG:1)
				CALL MESSAGE_WINDOW_D, "", "＞鍵がかかっている。"
				RETURN 0
			ENDIF
		CASEELSE
	ENDSELECT
ENDIF
CALL CAN_ENTER,ARG,ARG:1
RETURN RESULT

;=======================================================================
;플로어데이터
;=======================================================================
@MAKE_FLOOR_81
SELECTCASE FLAG:현M
	CASE 0
		FLAG:최대X = 13
		FLAG:최대Y = 16
							;	  01234567890123
		CALL MAKE_FLOOR_LINE, 0, "             "
		CALL MAKE_FLOOR_LINE, 1, " 1a1 ! 11121 "
		CALL MAKE_FLOOR_LINE, 2, " 2 2 2 2 1 1 "
		CALL MAKE_FLOOR_LINE, 3, " 1 3 1 p 1 1 "
		CALL MAKE_FLOOR_LINE, 4, " 1   1   1   "
		CALL MAKE_FLOOR_LINE, 5, " 11 11e  1   "
		CALL MAKE_FLOOR_LINE, 6, " b1      1   "
		CALL MAKE_FLOOR_LINE, 7, " 2       1 1 "
		CALL MAKE_FLOOR_LINE, 8, " 112111111 1 "
		CALL MAKE_FLOOR_LINE, 9, " 11   2    1 "
		CALL MAKE_FLOOR_LINE,10, " 2  11111211 "
		CALL MAKE_FLOOR_LINE,11, " 1  11111  1 "
		CALL MAKE_FLOOR_LINE,12, " 1    2    1 "
		CALL MAKE_FLOOR_LINE,13, " 2    8    2 "
		CALL MAKE_FLOOR_LINE,14, " '         3 "
		CALL MAKE_FLOOR_LINE,15, "             "

	CASE 1
		FLAG:최대X = 24
		FLAG:최대Y = 15
							;	  0123456789012345678901234
		CALL MAKE_FLOOR_LINE, 0, "                        "
		CALL MAKE_FLOOR_LINE, 1, " 1A11 ! 111<111111      "
		CALL MAKE_FLOOR_LINE, 2, " 1  2 2  1   11  2      "
		CALL MAKE_FLOOR_LINE, 3, " 1 c111  1  11   11     "
		CALL MAKE_FLOOR_LINE, 4, " 1  111  1 11 111 1     "
		CALL MAKE_FLOOR_LINE, 5, " 1    2  1 1  1 2 111   "
		CALL MAKE_FLOOR_LINE, 6, " 121 11111 1211 1 2 1 # "
		CALL MAKE_FLOOR_LINE, 7, " 3 1            1 1 1 2 "
		CALL MAKE_FLOOR_LINE, 8, " B 11211 11    11 1 111 "
		CALL MAKE_FLOOR_LINE, 9, " 121  11 11  111  1     "
		CALL MAKE_FLOOR_LINE,10, " 1     2  2   1  113    "
		CALL MAKE_FLOOR_LINE,11, " 1 111 1111   12111     "
		CALL MAKE_FLOOR_LINE,12, " 2 2 1  ^        2      "
		CALL MAKE_FLOOR_LINE,13, " ' % 1211112111211      "
		CALL MAKE_FLOOR_LINE,14, "                        "
		
	CASE 2
		FLAG:최대X = 15
		FLAG:최대Y = 15
							;	  0123456789012345
		CALL MAKE_FLOOR_LINE, 0, "               "
		CALL MAKE_FLOOR_LINE, 1, " 11111 ! 11111 "
		CALL MAKE_FLOOR_LINE, 2, " 2 2 1 2 2   2 "
		CALL MAKE_FLOOR_LINE, 3, " 1 C 1 1 P   1 "
		CALL MAKE_FLOOR_LINE, 4, "     1 1     1 "
		CALL MAKE_FLOOR_LINE, 5, " 11111 1 E21 1 "
		CALL MAKE_FLOOR_LINE, 6, " 1     1   1 1 "
		CALL MAKE_FLOOR_LINE, 7, " 1 11111 111 1 "
		CALL MAKE_FLOOR_LINE, 8, " 1  2      2 2 "
		CALL MAKE_FLOOR_LINE, 9, " 1  11111  111 "
		CALL MAKE_FLOOR_LINE,10, " 2      11   1 "
		CALL MAKE_FLOOR_LINE,11, " 111111      1 "
		CALL MAKE_FLOOR_LINE,12, " 1    11     1 "
		CALL MAKE_FLOOR_LINE,13, " '     1111111 "
		CALL MAKE_FLOOR_LINE,14, "               "

	CASE 3
		FLAG:최대X = 17
		FLAG:최대Y = 12
							;	  012345678901234567
		CALL MAKE_FLOOR_LINE, 0, "                 "
		CALL MAKE_FLOOR_LINE, 1, " 111   ! 121 111 "
		CALL MAKE_FLOOR_LINE, 2, " 2 111 2 1 1 2 2 "
		CALL MAKE_FLOOR_LINE, 3, " 1 2 1 1 1211111 "
		CALL MAKE_FLOOR_LINE, 4, " 1 6 1>1   1   1 "
		CALL MAKE_FLOOR_LINE, 5, " 1     111111111 "
		CALL MAKE_FLOOR_LINE, 6, " 1 31121   1   1 "
		CALL MAKE_FLOOR_LINE, 7, " 1     1   1   1 "
		CALL MAKE_FLOOR_LINE, 8, " 111211111111111 "
		CALL MAKE_FLOOR_LINE, 9, "       1   1   1 "
		CALL MAKE_FLOOR_LINE,10, "       111111111 "
		CALL MAKE_FLOOR_LINE,11, "                 "

	CASE 4
		FLAG:최대X = 26
		FLAG:최대Y = 27
							;	  012345678901234567890123456
		CALL MAKE_FLOOR_LINE, 0, "                          "
		CALL MAKE_FLOOR_LINE, 1, "   3 1111111 11111111     "
		CALL MAKE_FLOOR_LINE, 2, "  11 1     1 1      2 1   "
		CALL MAKE_FLOOR_LINE, 3, " 113 1 1<121 1   1111 121 "
		CALL MAKE_FLOOR_LINE, 4, " 2   1 _ ^   1   2    1 1 "
		CALL MAKE_FLOOR_LINE, 5, " 11  2 1>12111   1111 1 1 "
		CALL MAKE_FLOOR_LINE, 6, " 11  1 _            2 1 1 "
		CALL MAKE_FLOOR_LINE, 7, " 1   1 1  !      1111 1 1 "
		CALL MAKE_FLOOR_LINE, 8, " 1   1 1  2      2    1 1 "
		CALL MAKE_FLOOR_LINE, 9, " 1 111 12111 121 112111 1 "
		CALL MAKE_FLOOR_LINE,10, " 1 11    11121          1 "
		CALL MAKE_FLOOR_LINE,11, " 1 2   7  1             1 "
		CALL MAKE_FLOOR_LINE,12, " 111   2  ^         11211 "
		CALL MAKE_FLOOR_LINE,13, " 1     11 111112111<11    "
		CALL MAKE_FLOOR_LINE,14, " 111>121121   1      1  # "
		CALL MAKE_FLOOR_LINE,15, " 1 1      1   1      1  2 "
		CALL MAKE_FLOOR_LINE,16, " 1 111  (211111      1 11 "
		CALL MAKE_FLOOR_LINE,17, " 1 1 2      2        1211 "
		CALL MAKE_FLOOR_LINE,18, " 1 1 $ 111  1             "
		CALL MAKE_FLOOR_LINE,19, " 1 1   2 1  1  1111111111 "
		CALL MAKE_FLOOR_LINE,20, " 1 111 % 1  1 11     2  1 "
		CALL MAKE_FLOOR_LINE,21, " 1   1   1  ^ 1     11  1 "
		CALL MAKE_FLOOR_LINE,22, " 111 1   1  1 12&  11  11 "
		CALL MAKE_FLOOR_LINE,23, " 11  1  111 1      11  11 "
		CALL MAKE_FLOOR_LINE,24, "  11 1  1   1 11      11  "
		CALL MAKE_FLOOR_LINE,25, "   111  121112111111111   "
		CALL MAKE_FLOOR_LINE,26, "                          "

	CASE 5
		FLAG:최대X = 13
		FLAG:최대Y = 11
							;	  01234567890123
		CALL MAKE_FLOOR_LINE, 0, "             "
		CALL MAKE_FLOOR_LINE, 1, " 1111111 111 "
		CALL MAKE_FLOOR_LINE, 2, " 1     2   1 "
		CALL MAKE_FLOOR_LINE, 3, " 1 f21 1g121 "
		CALL MAKE_FLOOR_LINE, 4, " 1   1   1 1 "
		CALL MAKE_FLOOR_LINE, 5, " 11  1>1 1   "
		CALL MAKE_FLOOR_LINE, 6, " 1     111 h "
		CALL MAKE_FLOOR_LINE, 7, " 1 111     1 "
		CALL MAKE_FLOOR_LINE, 8, " 2   1     2 "
		CALL MAKE_FLOOR_LINE, 9, " ) (21111111 "
		CALL MAKE_FLOOR_LINE,10, "             "

	CASE 6
		FLAG:최대X = 16
		FLAG:최대Y = 13
							;	  01234567890123456
		CALL MAKE_FLOOR_LINE, 0, "                "
		CALL MAKE_FLOOR_LINE, 1, "   1111 1111111 "
		CALL MAKE_FLOOR_LINE, 2, " 1 2 1121   111 "
		CALL MAKE_FLOOR_LINE, 3, " 1 F      G2111 "
		CALL MAKE_FLOOR_LINE, 4, " 1          1 2 "
		CALL MAKE_FLOOR_LINE, 5, " 11111>111111 i "
		CALL MAKE_FLOOR_LINE, 6, " 1            H "
		CALL MAKE_FLOOR_LINE, 7, " 2     11211 11 "
		CALL MAKE_FLOOR_LINE, 8, " )   (211 11211 "
		CALL MAKE_FLOOR_LINE, 9, "       1      2 "
		CALL MAKE_FLOOR_LINE,10, "       1  11  1 "
		CALL MAKE_FLOOR_LINE,11, "       11211111 "
		CALL MAKE_FLOOR_LINE,12, "                "

	CASE 7
		FLAG:최대X = 19
		FLAG:최대Y = 29
							;	  01234567890123456789
		CALL MAKE_FLOOR_LINE, 0, "                   "
		CALL MAKE_FLOOR_LINE, 1, "          DDDDDDDD "
		CALL MAKE_FLOOR_LINE, 2, "        Q DQ Dk  J "
		CALL MAKE_FLOOR_LINE, 3, "       DDDD D DD   "
		CALL MAKE_FLOOR_LINE, 4, "       D  Q 2  Q I "
		CALL MAKE_FLOOR_LINE, 5, "       DDDDDD D  2 "
		CALL MAKE_FLOOR_LINE, 6, " 1<o26    D   2  j "
		CALL MAKE_FLOOR_LINE, 7, " 2        2 1111   "
		CALL MAKE_FLOOR_LINE, 8, " )  (21111q11  ^   "
		CALL MAKE_FLOOR_LINE, 9, "              111  "
		CALL MAKE_FLOOR_LINE,10, "            12111  "
		CALL MAKE_FLOOR_LINE,11, "    111111111      "
		CALL MAKE_FLOOR_LINE,12, "    2       2      "
		CALL MAKE_FLOOR_LINE,13, "    $       1      "
		CALL MAKE_FLOOR_LINE,14, "            ^      "
		CALL MAKE_FLOOR_LINE,15, "  1111111111112&   "
		CALL MAKE_FLOOR_LINE,16, "  1                "
		CALL MAKE_FLOOR_LINE,17, "  1 111111111111   "
		CALL MAKE_FLOOR_LINE,18, "  1 1          1   "
		CALL MAKE_FLOOR_LINE,19, "  1 1 11111111 1   "
		CALL MAKE_FLOOR_LINE,20, "  1 1 1      1 1   "
		CALL MAKE_FLOOR_LINE,21, "  1 1 1 @211 1 1   "
		CALL MAKE_FLOOR_LINE,22, "  1 1 1    1 1 1   "
		CALL MAKE_FLOOR_LINE,23, "  1 1 111111 1 1   "
		CALL MAKE_FLOOR_LINE,24, "  1 1        1 1   "
		CALL MAKE_FLOOR_LINE,25, "  1 1111111111 1   "
		CALL MAKE_FLOOR_LINE,26, "  1            1   "
		CALL MAKE_FLOOR_LINE,27, "  11111111111111   "
		CALL MAKE_FLOOR_LINE,28, "                   "
;一応残しておく
;		CALL MAKE_FLOOR_LINE,15, "  11111u1111112&   "
;		CALL MAKE_FLOOR_LINE,16, "  1                "
;		CALL MAKE_FLOOR_LINE,17, "  1 1111s1111111   "
;		CALL MAKE_FLOOR_LINE,18, "  V R          1   "
;		CALL MAKE_FLOOR_LINE,19, "  1 1 11111111 1   "
;		CALL MAKE_FLOOR_LINE,20, "  1 1 1      1 1   "
;		CALL MAKE_FLOOR_LINE,21, "  1 1 1 @211 1 1   "
;		CALL MAKE_FLOOR_LINE,22, "  1 1 1    1 1 1   "
;		CALL MAKE_FLOOR_LINE,23, "  1 1 111111 1 1   "
;		CALL MAKE_FLOOR_LINE,24, "  1 1        r v   "
;		CALL MAKE_FLOOR_LINE,25, "  1 111S111111 1   "
;		CALL MAKE_FLOOR_LINE,26, "  1            1   "
;		CALL MAKE_FLOOR_LINE,27, "  111111111U1111   "

	CASE 8
		FLAG:최대X = 16
		FLAG:최대Y = 11
							;	  01234567890123456
		CALL MAKE_FLOOR_LINE, 0, "                "
		CALL MAKE_FLOOR_LINE, 1, " 11111   121 1  "
		CALL MAKE_FLOOR_LINE, 2, " 1   1   1 K211 "
		CALL MAKE_FLOOR_LINE, 3, " 126 121 1 1  2 "
		CALL MAKE_FLOOR_LINE, 4, " 1   1 1 1 1211 "
		CALL MAKE_FLOOR_LINE, 5, " 11111 1 1 2 1  "
		CALL MAKE_FLOOR_LINE, 6, "       1 n = 1  "
		CALL MAKE_FLOOR_LINE, 7, " 12111lm 2   1  "
		CALL MAKE_FLOOR_LINE, 8, " 2       11  1  "
		CALL MAKE_FLOOR_LINE, 9, " )     7211121  "
		CALL MAKE_FLOOR_LINE,10, "                "

	CASE 9
		FLAG:최대X = 16
		FLAG:최대Y = 15
							;	  01234567890123456
		CALL MAKE_FLOOR_LINE, 0, "                "
		CALL MAKE_FLOOR_LINE, 1, " 11111111 11111 "
		CALL MAKE_FLOOR_LINE, 2, " 1      1 1   1 "
		CALL MAKE_FLOOR_LINE, 3, " 1 721121 1 1 1 "
		CALL MAKE_FLOOR_LINE, 4, " 1        1 2 1 "
		CALL MAKE_FLOOR_LINE, 5, " 1 111111 111 1 "
		CALL MAKE_FLOOR_LINE, 6, " 1 2    2     1 "
		CALL MAKE_FLOOR_LINE, 7, " 11111LMN 111 1 "
		CALL MAKE_FLOOR_LINE, 8, " 2     11 2 1 1 "
		CALL MAKE_FLOOR_LINE, 9, " 1   6211 = 1 1 "
		CALL MAKE_FLOOR_LINE,10, " 1      2     1 "
		CALL MAKE_FLOOR_LINE,11, " 11211111    11 "
		CALL MAKE_FLOOR_LINE,12, "  1     121  2  "
		CALL MAKE_FLOOR_LINE,13, "  1211111 1111  "
		CALL MAKE_FLOOR_LINE,14, "                "

	CASE 10
		FLAG:최대X = 15
		FLAG:최대Y = 14
							;	  0123456789012345
		CALL MAKE_FLOOR_LINE, 0, "               "
		CALL MAKE_FLOOR_LINE, 1, " w1111111W   X "
		CALL MAKE_FLOOR_LINE, 2, "   2 1 2     1 "
		CALL MAKE_FLOOR_LINE, 3, " 111 1 111   1 "
		CALL MAKE_FLOOR_LINE, 4, " 2   1   2   1 "
		CALL MAKE_FLOOR_LINE, 5, " 111 y 111   1 "
		CALL MAKE_FLOOR_LINE, 6, "   2   2     1 "
		CALL MAKE_FLOOR_LINE, 7, " O 111 1 111 1 "
		CALL MAKE_FLOOR_LINE, 8, " 2   1 x 2 1 1 "
		CALL MAKE_FLOOR_LINE, 9, " 1 721   = 1 1 "
		CALL MAKE_FLOOR_LINE,10, " 1           1 "
		CALL MAKE_FLOOR_LINE,11, " 1211111111121 "
		CALL MAKE_FLOOR_LINE,12, "             Y "
		CALL MAKE_FLOOR_LINE,13, "               "

	CASE 11
		FLAG:최대X = 13
		FLAG:최대Y = 11
							;	  01234567890123
		CALL MAKE_FLOOR_LINE, 0, "             "
		CALL MAKE_FLOOR_LINE, 1, "      @      "
		CALL MAKE_FLOOR_LINE, 2, "      2      "
		CALL MAKE_FLOOR_LINE, 3, "  31  1  11  "
		CALL MAKE_FLOOR_LINE, 4, "  112111211  "
		CALL MAKE_FLOOR_LINE, 5, "      1  2   "
		CALL MAKE_FLOOR_LINE, 6, "      ~  =   "
		CALL MAKE_FLOOR_LINE, 7, " 111 111     "
		CALL MAKE_FLOOR_LINE, 8, " 2 1 1 1 111 "
		CALL MAKE_FLOOR_LINE, 9, " $ 121112113 "
		CALL MAKE_FLOOR_LINE,10, "             "

	CASEELSE
ENDSELECT
;=======================================================================
;特殊タイル표시
;=======================================================================
@TILE_MARK_COMMON_81_1, ARG , ARG:1 , ARG:2
;IF FLAG:DEBUG
SELECTCASE ARG / 10 % 10 
	CASE 0
		RETURN 1
	CASEELSE
		RESULTS = Ｗ
ENDSELECT

@TILE_MARK_COMMON_81_9, ARG , ARG:1 , ARG:2
		RESULTS = Ｅ

;=======================================================================
;タイル調整
;=======================================================================
@MAKE_FLOOR_LINE_COMMON_81, ARG, ARG:1, ARG:2
#LOCALSIZE 30
;LOCAL:3 宝箱 던전플래그:84~99
;LOCAL:4 이벤트
;(0/0)でLOCALを소거
SIF ARG:1 == 0 && ARG:2 == 0
	VARSET LOCAL
SELECTCASE ARG
	CASE 3
		IF GETBIT(던전플래그:(FLAG:현던전):(FLAG:현M+70), LOCAL:3)
			DA:(ARG:1):(ARG:2) = 1
		ELSE
			DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:3 * 10 + 3
		ENDIF
		LOCAL:3++
	CASE 4
		DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:4 * 10 + 4
		LOCAL:4++
	CASE 5
		;DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:5 * 10 + 5
		;LOCAL:5++
	CASE 6
		DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:6 * 10 + 6
		LOCAL:6++
	CASE 7
		DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:7 * 10 + 7
		LOCAL:7++
	CASE 8
		DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:8 * 10 + 8
		LOCAL:8++
	CASE 9
		DA:(ARG:1):(ARG:2) = FLAG:현M *1000 + LOCAL:9 * 10 + 9
		LOCAL:9++
ENDSELECT

;=======================================================================
;タイル定義
;=======================================================================
@DEFINE_TILES_81, ARGS, ARG, ARG:1
SELECTCASE ARGS
	CASE "a"
		RETURN 101
	CASE "A"
		RETURN 111
	CASE "b"
		RETURN 201
	CASE "B"
		RETURN 211
	CASE "c"
		RETURN 301
	CASE "C"
		RETURN 311
	CASE "e"
		RETURN 501
	CASE "E"
		RETURN 511
	CASE "f"
		RETURN 601
	CASE "F"
		RETURN 611
	CASE "g"
		RETURN 701
	CASE "G"
		RETURN 711
	CASE "h"
		RETURN 801
	CASE "H"
		RETURN 811
	CASE "i"
		RETURN 901
	CASE "I"
		RETURN 911
	CASE "j"
		RETURN 1001
	CASE "J"
		RETURN 1011
	CASE "k"
		RETURN 1101
	CASE "K"
		RETURN 1111
	CASE "l"
		RETURN 1201
	CASE "L"
		RETURN 1211
	CASE "m"
		RETURN 1301
	CASE "M"
		RETURN 1311
	CASE "n"
		RETURN 1401
	CASE "N"
		RETURN 1411
	CASE "o"
		RETURN 1501
	CASE "O"
		RETURN 1511
	CASE "p"
		RETURN 1601
	CASE "P"
		RETURN 1611
	CASE "q"
		RETURN 1701
	CASE "Q"
		RETURN 1711
	CASE "r"
		RETURN 1801
	CASE "R"
		RETURN 1811
	CASE "s"
		RETURN 1901
	CASE "S"
		RETURN 1911
	CASE "u"
		RETURN 2001
	CASE "U"
		RETURN 2011
	CASE "v"
		RETURN 2101
	CASE "V"
		RETURN 2111
	CASE "w"
		RETURN 2201
	CASE "W"
		RETURN 2211
	CASE "x"
		RETURN 2301
	CASE "X"
		RETURN 2311
	CASE "y"
		RETURN 2401
	CASE "Y"
		RETURN 2411

	CASE "^"
		RETURN 12
	CASE "_"
		RETURN 22
	CASE "<"
		RETURN 32
	CASE ">"
		RETURN 42
	CASE "~"
		RETURN 52

	CASE "@"
		RETURN 4

	CASE "!"
		RETURN 19
	CASE "#"
		RETURN 29
	CASE "$"
		RETURN 39
	CASE "%"
		RETURN 49
	CASE "&"
		RETURN 59
	CASE "'"
		RETURN 69
	CASE "("
		RETURN 79
	CASE ")"
		RETURN 89
	CASE "="
		RETURN 99
ENDSELECT

;=======================================================================
;[5]調べる　実行時の이벤트
;=======================================================================
@EVENT_CHECK_DUNGEON_81
CALL EVENT_DUNGEON_81
RETURN RESULT

;=======================================================================
;タイル進入時の이벤트
;=======================================================================
@EVENT_ENTER_DUNGEON_81,ARG
;ARG = 進入時の向き　0の場合ワープなど
CALL EVENT_DUNGEON_81, ARG , 0
RETURN RESULT

@EVENT_DUNGEON_81, ARG, ARG:1
SELECTCASE DA:(FLAG:현X):(FLAG:현Y) % 10
;==========
;ワープの処理
;==========
	CASE 1
	CALL FLOOR_81
	RETURN RESULT
;==========
;出口の処理
;==========
	CASE 8
		CALL DUNGEON_EXIT
	RETURN 1
;==========
;扉の処理
;==========
	CASE 2
		CALL DUNGEON_DOOR,ARG
		RETURN 1
;========
;宝の処理
;========
CASE 3
CALL TREASURE_81
RETURN 1

;=======
;階段
;=======
CASE 6
CALL UPSTAIRS_81
RETURN RESULT

CASE 7
CALL DOWNSTAIRS_81
RETURN RESULT
;==========
;이벤트
;==========
	CASE 4
	IF FLAG:현M == 11
		IF 던전플래그:81:1 == 1
			CALL MESSAGE_WINDOW_D, "", "＞신 시청사 시장실"
			CALL MESSAGE_WINDOW_D, "후지와라시장", "본、본인은、아무런 관계도 없다、아무것도 모른다！！/"
			CALL MESSAGE_WINDOW_D, "후지와라시장", "목숨만은、목숨만은 살려주게！！/본인은 그녀석、야마시로의원이 추진한 도시개발계획을 추진했을 뿐이야！！"
			CALL MESSAGE_WINDOW_D, "후지와라시장", "그녀석은 지금、맞은편 문으로 나가면 갈수 있는 시의회 의사당에 있을걸세。/문 열쇠는、여깄네。/건네줄테니 모른척해주게……。"
			CALL MESSAGE_WINDOW_D, "", "/＞의사당 열쇠를 손에 넣었다。/"
		던전플래그:81:1 = 2
		ELSE
			CALL MESSAGE_WINDOW_D, "후지와라시장", "거、건너편 문을 통해 시의회 의사당에 갈 수 있다。/그러니、목숨만은、살려주게……。"
		ENDIF
	ELSE
		CALL MESSAGE_WINDOW_D, "", "＞신 시청사 의사당"
		CALL MESSAGE_WINDOW_D, "야마시로 의원", "어서오게、조직의 개자식。/잘도 여기까지 내 부하들을 쓰러트려 줬구만。"
		CALL MESSAGE_WINDOW_D, "야마시로 의원", "녀석들은 개한마리 쓰러트리지 못하는 구제불능이었지만、/내 비원의 초석이 됬었기에、/신세계가 도래하더라도 내 부하로 사용해 줄 예정이었던만。"
		CALL MESSAGE_WINDOW_D, "야마시로 의원", "시드・데이비스가 최후의 봉인을 풀면 봉인은 사라져 버린다。/그러면 내가 바라는 신세계는 바로다。"
		CALL MESSAGE_WINDOW_D, "야마시로 의원", "그럼、내가 네놈의 상대를 해주지。/네놈들은、행복한거다。"
		CALL MESSAGE_WINDOW_D, "데미우르고스", "위대한 원령의 힘을 얻어、/완전한 세계를 만드는 신세계의 신、/데미우르고스의 손에 죽으니까。"
		CALL MESSAGE_WINDOW_D, "", "＞사신　데미우르고스　가１체 나타났다！"
		FLAG:도주불가플래그 = 1
		FLAG:회화불능플래그 = 1
		FLAG:선제기습취소 = 1

		CALL SET_ENEMY,9,[[キャラ:데미우르고스]],70,0,1
		CFLAG:(CHARANUM-1):ＨＰ보정 = 2000
		CFLAG:(CHARANUM-1):ＭＰ보정 = 10000
		CFLAG:(CHARANUM-1):행동횟수 = 2
		CALL SYNC_STATUS,(CHARANUM-1)
		CALL HEALTH_CHARA,(CHARANUM-1)

		CALL BATTLE_START

		FLAG:도주불가플래그 = 0
		FLAG:회화불능플래그 = 0
		FLAG:선제기습취소 = 0
		CALL MESSAGE_WINDOW_D, "", "＞데미우르고스를 쓰러트림에 따라 이나루나 공주를 이용하던 조직의 배신자들은 숙청되었다."
	IF 던전플래그:78:1 == 1
		CALL MESSAGE_WINDOW_D, "", "＞하지만、계획을 실행하던 시드・데이비스의 모습이 보이지 않음에 당신은 일말의 불안을 느꼇다/＞녀석은 무엇을 노리고 있던 것일까……"
	ELSEIF 던전플래그:78:1 == 2
		CALL MESSAGE_WINDOW_D, "", "＞하지만、녀석들에게 납치당한 쿠미코도, 시드・데이비스도 보이지 않았다./＞시드・데이비스는 조직도 데미우르고스도 관계없이 이나루나 공주를 부활시키려 하는지 모른다/＞당신은 일말의 불안함을 느꼇다"
	ENDIF
		CALL MESSAGE_WINDOW_D, "", "＞조직의 불온분자를 배제함에 따라、/＞포상으로 ￥100000가 지급되었고、명성500이 올랐다"
		CALL LIFTING_A_BAN([[キャラ:데미우르고스]])
		;FLAG:11626 = 1
		MONEY += 100000
		FLAG:명성 += 500
		던전플래그:81:0 = 1
		FLAG:탈출 = 1
	ENDIF
RETURN 0

;========================
;エレベーター
;========================
	CASE 9
		SELECTCASE DA:(FLAG:현X):(FLAG:현Y) / 10
			;エレベーター
			CASE 1
				CALL DUNGEON_ELEVATOR, 19
			CASE 2
				CALL DUNGEON_ELEVATOR, 29
			CASE 3
				CALL DUNGEON_ELEVATOR, 39
			CASE 4
				CALL DUNGEON_ELEVATOR, 49
			CASE 5
				CALL DUNGEON_ELEVATOR, 59
			CASE 6
				CALL DUNGEON_ELEVATOR, 69
			CASE 7
				CALL DUNGEON_ELEVATOR, 79
			CASE 8
				CALL DUNGEON_ELEVATOR, 89
			CASE 9
				CALL DUNGEON_ELEVATOR, 99
		ENDSELECT
		RETURN 1
ENDSELECT
RETURN 0
;=======================================================================
;エレベーター定義
;=======================================================================
@DUNGEON_ELEVATOR_81, ARG
VARSET RESULT, -1
VARSET RESULTS
SELECTCASE ARG
	CASE 19
		RESULT:1 = 0
		RESULT:2 = 1
		RESULT:3 = 2
		RESULT:4 = 3
		RESULT:5 = 4
		RETURN -1
	CASE 29
		RESULT:1 = 1
		RESULT:2 = 4
		RETURN -1
	CASE 39
		RESULT:1 = 4
		RESULT:2 = 7
		RESULT:3 = 11
		RETURN -1
	CASE 49
		RESULT:1 = 1
		RESULT:2 = 4
		RETURN -1
	CASE 59
		RESULT:1 = 4
		RESULT:2 = 7
		RETURN -1
	CASE 69
		RESULT:1 = 0
		RESULT:2 = 1
		RESULT:3 = 2
		RETURN -1
	CASE 79
		RESULT:1 = 4
		RESULT:2 = 5
		RESULT:3 = 6
		RESULT:4 = 7
		RETURN -1
	CASE 89
		RESULT:1 = 5
		RESULT:2 = 6
		RESULT:3 = 7
		RESULT:4 = 8
		RETURN -1
	CASE 99
		RESULT:1 = 8
		RESULT:2 = 9
		RESULT:3 = 10
		RESULT:4 = 11
		RETURN -1
ENDSELECT

;=======================================================================
;階段置き場
;=======================================================================
@UPSTAIRS_81
;位置とIDが対応しているはずなので、同IDの階段を探させれば良い
SELECTCASE FLAG:현M
	CASEELSE
		CALL DUNGEON_UPSTAIRS_ID, FLAG:현M+1 , DA:(FLAG:현X):(FLAG:현Y) + 1000 + 1
ENDSELECT
RETURN 1

@DOWNSTAIRS_81
SELECTCASE FLAG:현M
	CASEELSE
		CALL DUNGEON_DOWNSTAIRS_ID, FLAG:현M-1 , DA:(FLAG:현X):(FLAG:현Y) - 1000 - 1
ENDSELECT
RETURN 1

;-----------------------------------------------------------------------
;タイル이벤트
;-----------------------------------------------------------------------
@FLOOR_81, ARG
SELECTCASE DA:(FLAG:현X):(FLAG:현Y) / 10 % 10 
	CASE 0
		RETURN 0
	CASEELSE
		CALL MESSAGE_WINDOW_D, "", "＞ワープゾーンだ！"
		LOCAL = DA:(FLAG:현X):(FLAG:현Y) / 10 % 10 ? DA:(FLAG:현X):(FLAG:현Y) -10 # DA:(FLAG:현X):(FLAG:현Y) + 10
			SELECTCASE DA:(FLAG:현X):(FLAG:현Y) / 10
				CASE 51 , 151 , 161
					LOCAL:1 = (FLAG:현M - 2)
				CASE 101 , 171 , 181 , 191 , 201 , 211, 221, 231, 241
					LOCAL:1 = FLAG:현M
				CASEELSE
					LOCAL:1 = DA:(FLAG:현X):(FLAG:현Y) / 10 % 10 ? FLAG:현M - 1 # FLAG:현M + 1
				ENDSELECT
		CALL SHOW_PICTURE, "EMPTY"
		CALL DUNGEON_WORP_ID, LOCAL:1, LOCAL, 1
ENDSELECT

;=======================================================================
;宝箱の中身
;=======================================================================
@TREASURE_81
#LOCALSIZE 10
LOCAL = FLAG:현M + 70
LOCAL:1 = (DA:(FLAG:현X):(FLAG:현Y) / 10) % 100
SELECTCASE DA:(FLAG:현X):(FLAG:현Y) / 10
	;マップ番号*100+そのマップで何番눈の宝箱かを示す数値でどの宝箱かを判別します。
	;例えば0の場合、0版のマップの0番눈の宝箱であることを表しています。
	CASE 0
		CALL GET_TREASURE, [[아이템:챠크라포트]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 1
		CALL GET_TREASURE, [[아이템:코어실드]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 100
		CALL GET_TREASURE, [[아이템:소마]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 101
		CALL GET_TREASURE, [[아이템:새벽의갑옷]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 300
		CALL GET_TREASURE, [[아이템:우황단]] , 2 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 400
		CALL GET_TREASURE, [[아이템:디스챰]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 401
		CALL GET_TREASURE, [[아이템:마석]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 402
		CALL GET_TREASURE, [[아이템:마석]] , 1 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 1100
		CALL GET_TREASURE_MONEY, 0 , 60000 , FLAG:현던전, LOCAL , LOCAL:1
	CASE 1101
		CALL GET_TREASURE_MONEY, 0 , 30000 , FLAG:현던전, LOCAL , LOCAL:1
ENDSELECT
RETURN 1

;=======================================================================
;인카운트율
;=======================================================================
@ENCOUNT_RATE_81
		FLAG:인카운트율 = 15 + FLAG:미조우걸음수*5
SIF FLAG:미조우걸음수 < 5
	FLAG:인카운트율 = 0
;=======================================================================
;필요레벨눈安
;권장LV 雑魚최저LV 雑魚最高LV ボスLV 
;=======================================================================
@GET_DUNGEON_LV_81
RETURN 50, 51, 57, 100 

;=======================================================================
;エンカウント処理
;=======================================================================
@CHECK_ENCOUNT_81
IF RAND:100 < FLAG:인카운트율
	CALL ENEMY_TABLE
	RETURN 1
ELSE
	FLAG:미조우걸음수 += 1
	RETURN 0
ENDIF


;=======================================================================
;적の종족の종류数
;=======================================================================
@CLASS_NUM_81
	RETURN CLASS_NUM_COMMON("最上級")

;=======================================================================
;적の総数
;ARGは出現する적の종류です
;=======================================================================
@ENEMY_NUM_81, ARG
	RETURN ENEMY_NUM_COMMON("最上級", ARG)
;=======================================================================
;적の종류
;=======================================================================
@ENEMY_81, ARG
	SELECTCASE RAND:14
		CASE IS < 1
			RETURN [[キャラ:페리]], 51
		CASE IS < 2
			RETURN [[キャラ:다키니]], 51
		CASE IS < 3
			RETURN [[キャラ:도미니온]], 52
		CASE IS < 4
			RETURN [[キャラ:야크샤]], 52
		CASE IS < 5
			RETURN [[キャラ:카토블레파스]], 52
		CASE IS < 6
			RETURN [[キャラ:무슈후슈]], 58
		CASE IS < 7
			RETURN [[キャラ:티탄]], 53
		CASE IS < 8
			RETURN [[キャラ:안주]], 53
		CASE IS < 9
			RETURN [[キャラ:루흐]], 54
		CASE IS < 10
			RETURN [[キャラ:베탈라]], 54
		CASE IS < 11
			RETURN [[キャラ:기리메칼라]], 53
		CASE IS < 12
			RETURN [[キャラ:케르베로스]], 55
		CASE IS < 13
			RETURN [[キャラ:보티스]], 56
		CASE IS < 14
			RETURN [[キャラ:오베론]], 57
		ENDSELECT	
;=======================================================================
;윤간참가악마
;=======================================================================
@DUNGEON_RAPE_DEVIL_81
;랜덤にどの악마が出るか決定
;RETURN CSV番号 , 人数 , 레벨
SELECTCASE RAND:3
	CASE 0
		RETURN [[キャラ:베탈라]] , 3 + RAND:10 , CSVBASE([[キャラ:베탈라]] , GETNUM(BASE , "LV") , 0) + RAND:3
	CASE 1
		RETURN [[キャラ:안주]] , 3 + RAND:10 , CSVBASE([[キャラ:안주]] , GETNUM(BASE , "LV") , 0) + RAND:3
	CASE 2
		RETURN [[キャラ:야크샤]] , 3 + RAND:10 , CSVBASE([[キャラ:야크샤]] , GETNUM(BASE , "LV") , 0) + RAND:3
ENDSELECT