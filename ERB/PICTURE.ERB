;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;	Module		:PICTURE.ERB
;	Facility	:표시하고 싶은 것을 일시적으로 보존하고、각종 조작을 한 후에 일괄적으로 표시하는 함수
;
;	Licence		:ライセンスフリー
;
;	Modification Data:
;
;	Edit	Date			Author					Reason
;	001		20XX/XX/XX		Ｎ鳥					新規作成。参考:eraWizなど
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;--------------------------------------------------------------------
@SET_PICTURE, 입력, 행 = 0 , 표시 = "" , 표시행수 = -1
;--------------------------------------------------------------------
;입력문자열은「표시하고싶은 문자,색,폰트,버튼」을 '_' 로 분할한다
;例えば"この文字は灰色です,0x404040_そして_この文字は白です,0xEEEEEE"
;と第一引数に入れると、この文字は灰色ですそしてこの文字は白です
;                               ↑この辺灰色　　　　↑この辺白
;와 같은 느낌으로 표시된다。
;--------------------------------------------------------------------
#DIMS 입력대피 , 100
#DIMS 입력
#DIMS LEFT
#DIMS RIGHT
#DIMS 표시
#DIM 행
#DIM 표시행수
#DIMS 로그 , 50
#DIMS 폰트 , 2
#DIM 색 , 2
#DIM 개시위치
#DIMS 삽입문자열
#DIM 분할개시위치
#DIM 분할종료위치
#DIM 분할개시블록
#DIM 분할종료블록
#DIM 문자카운트
#DIMS 분할용속성저장용
#DIMS 분할문자열 , 2
#DIMS 왼쪽문자열
#DIMS 오른쪽문자열
#DIMS 행데이터 , 200
;생성되는 묘화 데이터는、덮어쓰기되지 않은 왼쪽 부분＋추가할 문자열＋덮어쓰기되지 않은 오른쪽 부분
;KR판 임의수정, 원문 CASE 추가
SELECTCASE 표시
	CASE "消去", "소거"
		VARSET 로그
		VARSET 입력
		RETURN 0
	CASE "표시"
		IF 표시행수 == -1
			FOR LOCAL , 49 , -1 , -1
				SIF 로그:LOCAL == ""
					표시행수 = LOCAL
			NEXT
		ENDIF
		폰트 = %GETFONT()%
		색 = GETCOLOR()
		FOR LOCAL , 행 , 행 + 표시행수
		
			LOCAL:2 = STRCOUNT(로그:LOCAL , "_") + 1
			FOR LOCAL:1 , 0 , LOCAL:2
				LOCALS = %AUTO_SPLIT(로그:LOCAL , "_" , LOCAL:1)%
				SIF AUTO_SPLIT(LOCALS , "," , 1) != ""
					SETCOLOR TOINT(AUTO_SPLIT(LOCALS , "," , 1))
				SIF AUTO_SPLIT(LOCALS , "," , 2) != ""
					SETFONT AUTO_SPLIT(LOCALS , "," , 2)
				IF AUTO_SPLIT(LOCALS , "," , 3) != ""
					PRINTBUTTON AUTO_SPLIT(LOCALS , "," , 0) , AUTO_SPLIT(LOCALS , "," , 3)
				ELSE
					PRINTFORM %AUTO_SPLIT(LOCALS , "," , 0)%
				ENDIF
				SETCOLOR 색
				SETFONT 폰트
			NEXT
			PRINTL
		NEXT
	;디버그용
	CASE "WAIT"
		WAIT
	CASEELSE
		IF 표시행수 == -1
			로그:행 += 입력 + "_"
		ELSE
			;첫 입력
			개시위치 = 표시행수
			IF 로그:행 == ""
				로그:행 = %" " * 개시위치 + 입력 + "_"%
				;PRINTFORMW {개시위치}
			ELSE
				;SIF FLAG:DEBUG
				;	PRINTW とい
				LOCAL:3 = STRCOUNT(입력 , "_")+1
				SPLIT 입력:0 , "_" , 입력대피
				삽입문자열 = 
				FOR LOCAL:2 , 0 , LOCAL:3
					;삽입문자열
					삽입문자열 += AUTO_SPLIT(입력대피:(LOCAL:2) , "," , 0)
				NEXT
					분할개시블록 = -1
					분할종료블록 = -1
					문자카운트 = 0
					왼쪽문자열 =
					오른쪽문자열 =
					LOCAL:1 = STRCOUNT(로그:행 , "_") + 1
					
					FOR LOCAL , 0 , LOCAL:1
					
						IF AUTO_SPLIT(로그:행 , "_" , LOCAL) == ""
							IF LOCAL == LOCAL:1 - 1 && 분할개시블록 == -1
								;PRINTW 届かなかった
								;개시위치까지 도착하지 않은 경우、개시위치-문자카운트 분량의 공백 추가
								;왼쪽문자열 += 
								입력 = %" " * (개시위치 - 문자카운트) + "_" + 입력%
								;PRINTFORMW {개시위치 - 문자카운트}
							ENDIF
							CONTINUE
						ENDIF
						LOCALS = %AUTO_SPLIT(로그:행 , "_" , LOCAL)%
						
						IF 분할개시블록 == -1
							;지금까지 문자열의 글자 수 + 이번 문자열의 길이가 개시위치 보다도 긴 경우、그 블록의 도중부터 삽입을 개시한다
							IF 문자카운트 + STRLENS(AUTO_SPLIT(LOCALS , "," , 0)) > 개시위치
								;분할할 위치를 특정
								분할개시위치 = 개시위치 - 문자카운트
								분할개시블록 = LOCAL
								LOCALS:1 = %AUTO_SPLIT(LOCALS , "," , 0)%
								
								;분할개시위치+삽입문자열의 길이가 이번 문자열 길이 이하라면、이 블록으로 완결된다
								IF 분할개시위치 + STRLENS(삽입문자열) < STRLENS(LOCALS:1)
								
									분할종료위치 = 분할개시위치 + STRLENS(삽입문자열)
									분할종료블록 = LOCAL
									;폰트 및 색 정보를 저장
									분할용속성저장용 = %AUTO_SPLIT(LOCALS , LOCALS:1 , 1)%
									
									;해당 블록의 문자열을 둘로 분할
									;왼쪽은 0～개시위치까지
									분할문자열:0 = %SUBSTRING(LOCALS:1 , 0 , 분할개시위치)%
									;２바이트（전각）문자를 도중부터 바꾸려고 했을 때의 표시 어긋남을 배제하는 처리
									;왼쪽 문자열 길이가 개시위치보다도 오른쪽에 있는 경우、왼쪽 문자의 마지막 한 글자를 반각 빈칸으로 변환한다
									SIF STRLENS(분할문자열:0) > 분할개시위치
										분할문자열:0 = %SUBSTRING(분할문자열:0 , 0 , STRLENS(분할문자열:0) - 2) + " "% 
									SIF 분할문자열:0 != ""
										분할문자열:0 += 분할용속성저장용
									
									;오른쪽은 분할종료위치～문자열의 끝까지
									분할문자열:1 = %SUBSTRING(LOCALS:1 , 분할종료위치)%
									;２바이트（전각）문자를 도중부터 바꾸려고 했을 때의 표시 어긋남을 배제하는 처리
									;LOCALS:1의 길이에서 분할문자열:1의 길이를 뺀 것보다 분할종료위치쪽이 큰 경우、
									;오른쪽 문자열의 첫 글자를 반각 빈칸으로 변환한다
									;PRINTW ここじょ
									SIF STRLENS(LOCALS:1) > 분할종료위치 + STRLENS(분할문자열:1)
										분할문자열:1 = %" " + SUBSTRING(분할문자열:1 , 0 , STRLENS(분할문자열:1))% 
									SIF 분할문자열:1 != ""
										분할문자열:1 += 분할용속성저장용
									왼쪽문자열 += 분할문자열:0+"_"
									오른쪽문자열 = %분할문자열:1%_
								
								ELSEIF 분할개시위치 + STRLENS(삽입문자열) == STRLENS(LOCALS:1)
									분할종료블록 = LOCAL
								;그렇지 않으면 종료 위치를 찾기 위해 계속한다
								
								ELSE
								
									분할종료위치 = STRLENS(삽입문자열) - (STRLENS(LOCALS:1) - 분할개시위치)
									
									문자카운트 += STRLENS(AUTO_SPLIT( LOCALS , "," , 0))
									
									;개시위치より後ろの文字列は削っておく（文字列数は既にカウント済みなのでもう用は無い）
									LOCALS:1 = %SUBSTRING(LOCALS:1 , 0 , 분할개시위치)%
									;２バイト（全角）文字を途中から書き換えようとした際の表示ズレを排除する処理
									;左側の文字列の長さが개시위치よりも右に有る場合、左がわの文字の最後の一文字を半角スペースに変換する
									IF STRLENS(LOCALS:1) > 분할개시위치
										LOCALS:1 = %SUBSTRING(LOCALS:1 , 0 , STRLENS(LOCALS:1) - 2) + " "%
										문자카운트 --
										;분할개시위치 --
										;분할종료위치 --
									ENDIF
									왼쪽문자열 += CHANGE_SPLIT(LOCALS , "," , 0 , , LOCALS:1) + "_"
									
								ENDIF
								
							ELSEIF LOCAL == LOCAL:1 - 1
								;PRINTW 届かなかった
								;개시위치까지 도착하지 않은 경우、개시위치-문자카운트분의 공백을 추가
								;왼쪽문자열 += 
								입력 = %" " * (개시위치 - 문자카운트) + "_" + 입력%
								;PRINTFORMW {개시위치 - 문자카운트}
							ELSE
								문자카운트 += STRLENS(AUTO_SPLIT( LOCALS , "," , 0))
								왼쪽문자열 += LOCALS + "_"
								
							ENDIF
						ELSEIF 분할종료블록 == -1
							;분할종료위치가 이 블록의 문자열 길이 이하인 경우、분할종료위치 보다도 왼쪽을 깎아서 오른쪽문자열에 대입한다
							IF 분할종료위치 <= STRLENS(AUTO_SPLIT( LOCALS , "," , 0))
								분할종료블록 = LOCAL
								LOCALS:1 = %SUBSTRING(AUTO_SPLIT(LOCALS , "," , 0) , 분할종료위치)%
								;２バイト（全角）文字の途中までを書き換えようとした際の表示ズレを排除する処理
								;LOCALS:1の長さから분할문자열:1の長さを引いた物よりも분할종료위치の方が大きい場合、
								;右側の文字列の最初の一文字を半角スペースに変換する
								;PRINTW 515
								SIF STRLENS(AUTO_SPLIT( LOCALS , "," , 0)) > 분할종료위치 + STRLENS(LOCALS:1)
									LOCALS:1 = %" " + SUBSTRING(LOCALS:1 , 0 , STRLENS(LOCALS:1))% 
								오른쪽문자열 = %CHANGE_SPLIT(LOCALS , "," , 0 , , LOCALS:1)%_
								
							ELSE
								분할종료위치 -= STRLENS(AUTO_SPLIT( LOCALS , "," , 0))
							ENDIF
							
						ELSE
							;後は오른쪽문자열に残りを追加していく
							오른쪽문자열 += LOCALS + "_"
						ENDIF
						
					NEXT
					로그:행 = % 왼쪽문자열 + 입력 + "_" + 오른쪽문자열 %
			ENDIF
			
			;統合処理予定地
			;LOCAL:1 = STRCOUNT(로그:행 , "_") + 1
			;FOR LOCAL , 0 , LOCAL:1
			;	SIF LOCAL:1 <= LOCAL +1
			;		BREAK
			;	LOCALS = %AUTO_SPLIT(로그:행 , "_" , LOCAL)%
			;	LOCALS:1 = %AUTO_SPLIT(LOCALS , "," , 0)%
			;	LOCALS:2 = %AUTO_SPLIT(LOCALS , LOCALS:1 , 1)%
			;	LOCALS:3 = %AUTO_SPLIT(로그:행 , "_" , LOCAL+1)%
			;	LOCALS:4 = %AUTO_SPLIT(LOCALS:3 , "," , 0)%
			;	LOCALS:5 = %AUTO_SPLIT(LOCALS:3 , LOCALS:4 , 1)%
			;	;PRINTW ここは？
			;	IF LOCALS:2 != "" && LOCALS:2 == LOCALS:5
			;		
			;		;PRINTW 返還前
			;		로그:행 = %CHANGE_SPLIT(로그:행 , "_" , LOCAL , , LOCALS:1+LOCALS:4+LOCALS:2)%
			;		로그:행 = %CHANGE_SPLIT(로그:행 , "_" , LOCAL+1 , , "")%
			;		;PRINTW じゃあここは？
			;		LOCAL = 0
			;		LOCAL:1 --
			;		로그:행 = %REPLACE(로그:행 , "__" , "_")%
			;		
			;	ENDIF
			;NEXT
			;PRINTFORML {LOCAL:1}
			;IF LOCAL:1
			;	PRINTW hoge
			;ENDIF
			
		ENDIF
ENDSELECT











